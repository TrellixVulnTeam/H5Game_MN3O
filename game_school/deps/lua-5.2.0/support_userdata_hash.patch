Index: lobject.c
===================================================================
--- lobject.c	(revision 13964)
+++ lobject.c	(working copy)
@@ -80,6 +80,12 @@
       return bvalue(t1) == bvalue(t2);  /* boolean true must be 1 !! */
     case LUA_TLIGHTUSERDATA:
       return pvalue(t1) == pvalue(t2);
+	case LUA_TUSERDATA:
+		return gcvalue(t1) == gcvalue(t2) || 
+			(
+			uvalue(t1)->len == uvalue(t2)->len
+			&& memcmp((rawuvalue(t1) + 1),(rawuvalue(t2) + 1),uvalue(t2)->len) == 0
+			);
     default:
       lua_assert(iscollectable(t1));
       return gcvalue(t1) == gcvalue(t2);
Index: ltable.c
===================================================================
--- ltable.c	(revision 13964)
+++ ltable.c	(working copy)
@@ -93,6 +93,19 @@
 
 
 
+unsigned int BKDRHash(const char *str,size_t len)
+{
+	unsigned int seed = 131; // 31 131 1313 13131 131313 etc..
+	unsigned int hash = 0;
+	size_t i = 0;
+
+	for(i = 0; i < len; ++i)
+	{
+		hash = hash * seed + (str[i]);
+	}
+
+	return (hash & 0x7FFFFFFF);
+}
 /*
 ** returns the `main' position of an element in a table (that is, the index
 ** of its hash value)
@@ -107,8 +120,17 @@
       return hashboolean(t, bvalue(key));
     case LUA_TLIGHTUSERDATA:
       return hashpointer(t, pvalue(key));
+	case LUA_TUSERDATA:
+		if(uvalue(key)->metatable == 0)
+		{
+			return hashpointer(t, gcvalue(key));
+		}
+		else
+		{
+			return hashmod(t,BKDRHash((const char*)(rawuvalue(key) + 1),uvalue(key)->len));
+		}
     default:
-      return hashpointer(t, gcvalue(key));
+		return hashpointer(t, gcvalue(key));
   }
 }
 
