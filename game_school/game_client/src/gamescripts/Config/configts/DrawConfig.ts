class DrawConfig extends BaseConfig{    public static  resLoaded:boolean = false;    private static  dic: Object = {};  	public static array: Array<DrawConfig> = [];    public static  Init()    {       this. LoadRes();    }    public readonly id:number;    public readonly draw:string;    public readonly draw2:string;    public readonly facePosition:number[];    public readonly face:string[];    public readonly emotionPosition1:number[];    public readonly emotionPosition2:number[];    public readonly emotionPosition3:number[];    public constructor(id : number , draw : string , draw2 : string , facePosition : number[] , face : string[] , emotionPosition1 : number[] , emotionPosition2 : number[] , emotionPosition3 : number[] ){		super()        this.id = id;        this.draw = draw;        this.draw2 = draw2;        this.facePosition = facePosition;        this.face = face;        this.emotionPosition1 = emotionPosition1;        this.emotionPosition2 = emotionPosition2;        this.emotionPosition3 = emotionPosition3;    }     private static  OnLoadFile( data:any)    { 		var byteData:egret.ByteArray = new egret.ByteArray( data );		var rs:ReadStream = new ReadStream(byteData);        /*int file_len = */rs.ReadInt();        var flag :string= rs.ReadString();        if(flag != "DrawConfig")        {            return;        }        var col_cnt:number = rs.ReadShort();        if(col_cnt != 8)        {            return;        }        var row_cnt:number = rs.ReadInt();        for( var i = 0; i < row_cnt; i++)        {          this.  Add_Item(rs);        }	  ConfFact.SetResLoad("DrawConfig");        this.  resLoaded = true;    }     private static  Add_Item(rs:ReadStream )    {                     var arr_item_len_DrawConfig:number;      var id: number  = rs.ReadInt();      var draw: string  = rs.ReadString();      var draw2: string  = rs.ReadString();        arr_item_len_DrawConfig = rs.ReadShort();    var  facePosition :  number[] = [];        for(var i = 0; i < arr_item_len_DrawConfig; ++i)            facePosition[i] = rs.ReadFloat();        arr_item_len_DrawConfig = rs.ReadShort();    var  face :  string[] = [];        for(var i = 0; i < arr_item_len_DrawConfig; ++i)            face[i] = rs.ReadString();        arr_item_len_DrawConfig = rs.ReadShort();    var  emotionPosition1 :  number[] = [];        for(var i = 0; i < arr_item_len_DrawConfig; ++i)            emotionPosition1[i] = rs.ReadFloat();        arr_item_len_DrawConfig = rs.ReadShort();    var  emotionPosition2 :  number[] = [];        for(var i = 0; i < arr_item_len_DrawConfig; ++i)            emotionPosition2[i] = rs.ReadFloat();        arr_item_len_DrawConfig = rs.ReadShort();    var  emotionPosition3 :  number[] = [];        for(var i = 0; i < arr_item_len_DrawConfig; ++i)            emotionPosition3[i] = rs.ReadFloat();      var  new_obj_DrawConfig : DrawConfig = new DrawConfig(id, draw, draw2, facePosition, face, emotionPosition1, emotionPosition2, emotionPosition3);                if(this.ContainsKey(id))        {            return;        }		this.dic[id]= new_obj_DrawConfig;        this.array.push(new_obj_DrawConfig);    }	private static  LoadRes()    {        if(this.resLoaded) return;		 if(this.isUseLocalTable)        {        var urlName:string = this. bytespath+="DrawConfig.bytes";        RES.getResByUrl(urlName,this.OnLoadFile,this,RES.ResourceItem.TYPE_BIN);        }            }	 public static  GetConfig(  id ):DrawConfig    {        for (var key in this.dic)            {            if(key==id)            {                 return this.dic[key];               }        }        return null;    }		   public static  ContainsKey(  id ):boolean    {        for (var key in this.dic)            {            if(key==id)            {                 return true;            }        }        return false;    }}