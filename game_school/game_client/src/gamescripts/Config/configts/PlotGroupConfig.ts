class PlotGroupConfig extends BaseConfig{    public static  resLoaded:boolean = false;    private static  dic: Object = {};  	public static array: Array<PlotGroupConfig> = [];    public static  Init()    {       this. LoadRes();    }    public readonly plotGroupID:number;    public readonly startDialogID:number;    public readonly triggerType:number;    public readonly icon:string;    public readonly name:string;    public readonly reward:number[];    public readonly reward_num:number[];    public constructor(plotGroupID : number , startDialogID : number , triggerType : number , icon : string , name : string , reward : number[] , reward_num : number[] ){		super()        this.plotGroupID = plotGroupID;        this.startDialogID = startDialogID;        this.triggerType = triggerType;        this.icon = icon;        this.name = name;        this.reward = reward;        this.reward_num = reward_num;    }     private static  OnLoadFile( data:any)    { 		var byteData:egret.ByteArray = new egret.ByteArray( data );		var rs:ReadStream = new ReadStream(byteData);        /*int file_len = */rs.ReadInt();        var flag :string= rs.ReadString();        if(flag != "PlotGroupConfig")        {            return;        }        var col_cnt:number = rs.ReadShort();        if(col_cnt != 7)        {            return;        }        var row_cnt:number = rs.ReadInt();        for( var i = 0; i < row_cnt; i++)        {          this.  Add_Item(rs);        }	  ConfFact.SetResLoad("PlotGroupConfig");        this.  resLoaded = true;    }     private static  Add_Item(rs:ReadStream )    {                     var arr_item_len_PlotGroupConfig:number;      var plotGroupID: number  = rs.ReadInt();      var startDialogID: number  = rs.ReadInt();      var triggerType: number  = rs.ReadInt();      var icon: string  = rs.ReadString();      var name: string  = rs.ReadString();        arr_item_len_PlotGroupConfig = rs.ReadShort();    var  reward :  number[] = [];        for(var i = 0; i < arr_item_len_PlotGroupConfig; ++i)            reward[i] = rs.ReadInt();        arr_item_len_PlotGroupConfig = rs.ReadShort();    var  reward_num :  number[] = [];        for(var i = 0; i < arr_item_len_PlotGroupConfig; ++i)            reward_num[i] = rs.ReadInt();      var  new_obj_PlotGroupConfig : PlotGroupConfig = new PlotGroupConfig(plotGroupID, startDialogID, triggerType, icon, name, reward, reward_num);                if(this.ContainsKey(plotGroupID))        {            return;        }		this.dic[plotGroupID]= new_obj_PlotGroupConfig;        this.array.push(new_obj_PlotGroupConfig);    }	private static  LoadRes()    {        if(this.resLoaded) return;		 if(this.isUseLocalTable)        {        var urlName:string = this. bytespath+="PlotGroupConfig.bytes";        RES.getResByUrl(urlName,this.OnLoadFile,this,RES.ResourceItem.TYPE_BIN);        }            }	 public static  GetConfig(  id ):PlotGroupConfig    {        for (var key in this.dic)            {            if(key==id)            {                 return this.dic[key];               }        }        return null;    }		   public static  ContainsKey(  id ):boolean    {        for (var key in this.dic)            {            if(key==id)            {                 return true;            }        }        return false;    }}