class ChapterConfig extends BaseConfig{    public static  resLoaded:boolean = false;    private static  dic: Object = {};  	public static array: Array<ChapterConfig> = [];    public static  Init()    {       this. LoadRes();    }    public readonly id:number;    public readonly chapter_num:string;    public readonly chapter_name:string;    public readonly type:number;    public readonly star_condition:number[];    public readonly star_reward:number[];    public readonly chapter_reward:number;    public readonly chapter_id:number[];    public readonly chapter_bg:string;    public readonly chapter_music:string;    public constructor(id : number , chapter_num : string , chapter_name : string , type : number , star_condition : number[] , star_reward : number[] , chapter_reward : number , chapter_id : number[] , chapter_bg : string , chapter_music : string ){		super()        this.id = id;        this.chapter_num = chapter_num;        this.chapter_name = chapter_name;        this.type = type;        this.star_condition = star_condition;        this.star_reward = star_reward;        this.chapter_reward = chapter_reward;        this.chapter_id = chapter_id;        this.chapter_bg = chapter_bg;        this.chapter_music = chapter_music;    }     private static  OnLoadFile( data:any)    { 		var byteData:egret.ByteArray = new egret.ByteArray( data );		var rs:ReadStream = new ReadStream(byteData);        /*int file_len = */rs.ReadInt();        var flag :string= rs.ReadString();        if(flag != "ChapterConfig")        {            return;        }        var col_cnt:number = rs.ReadShort();        if(col_cnt != 10)        {            return;        }        var row_cnt:number = rs.ReadInt();        for( var i = 0; i < row_cnt; i++)        {          this.  Add_Item(rs);        }	  ConfFact.SetResLoad("ChapterConfig");        this.  resLoaded = true;    }     private static  Add_Item(rs:ReadStream )    {                     var arr_item_len_ChapterConfig:number;      var id: number  = rs.ReadInt();      var chapter_num: string  = rs.ReadString();      var chapter_name: string  = rs.ReadString();      var type: number  = rs.ReadInt();        arr_item_len_ChapterConfig = rs.ReadShort();    var  star_condition :  number[] = [];        for(var i = 0; i < arr_item_len_ChapterConfig; ++i)            star_condition[i] = rs.ReadInt();        arr_item_len_ChapterConfig = rs.ReadShort();    var  star_reward :  number[] = [];        for(var i = 0; i < arr_item_len_ChapterConfig; ++i)            star_reward[i] = rs.ReadInt();      var chapter_reward: number  = rs.ReadInt();        arr_item_len_ChapterConfig = rs.ReadShort();    var  chapter_id :  number[] = [];        for(var i = 0; i < arr_item_len_ChapterConfig; ++i)            chapter_id[i] = rs.ReadInt();      var chapter_bg: string  = rs.ReadString();      var chapter_music: string  = rs.ReadString();      var  new_obj_ChapterConfig : ChapterConfig = new ChapterConfig(id, chapter_num, chapter_name, type, star_condition, star_reward, chapter_reward, chapter_id, chapter_bg, chapter_music);                if(this.ContainsKey(id))        {            return;        }		this.dic[id]= new_obj_ChapterConfig;        this.array.push(new_obj_ChapterConfig);    }	private static  LoadRes()    {        if(this.resLoaded) return;		 if(this.isUseLocalTable)        {        var urlName:string = this. bytespath+="ChapterConfig.bytes";        RES.getResByUrl(urlName,this.OnLoadFile,this,RES.ResourceItem.TYPE_BIN);        }            }	 public static  GetConfig(  id ):ChapterConfig    {        for (var key in this.dic)            {            if(key==id)            {                 return this.dic[key];               }        }        return null;    }		   public static  ContainsKey(  id ):boolean    {        for (var key in this.dic)            {            if(key==id)            {                 return true;            }        }        return false;    }}