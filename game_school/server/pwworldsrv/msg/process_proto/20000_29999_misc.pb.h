// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: process_proto/20000_29999_misc.proto

#ifndef PROTOBUF_process_5fproto_2f20000_5f29999_5fmisc_2eproto__INCLUDED
#define PROTOBUF_process_5fproto_2f20000_5f29999_5fmisc_2eproto__INCLUDED

#include "pw_iconv.h"
#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "pwngs/options.pb.h"
#include "pwngs/protocol/worldsrv/00000_00000_def.pb.h"
// @@protoc_insertion_point(includes)

namespace pwngs {
namespace protocol {
namespace worldsrv {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_process_5fproto_2f20000_5f29999_5fmisc_2eproto();
void protobuf_AssignDesc_process_5fproto_2f20000_5f29999_5fmisc_2eproto();
void protobuf_ShutdownFile_process_5fproto_2f20000_5f29999_5fmisc_2eproto();

class SCCharacterKick;
class SCLevelup;
class CSTimeCheck;
class CSPing;
class SCPong;

// ===================================================================

class SCCharacterKick : public ::google::protobuf::Message {
 public:
  SCCharacterKick();
  virtual ~SCCharacterKick();
  
  SCCharacterKick(const SCCharacterKick& from);
  
  inline SCCharacterKick& operator=(const SCCharacterKick& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SCCharacterKick& default_instance();
  
  void Swap(SCCharacterKick* other);
  
  // implements Message ----------------------------------------------
  
  SCCharacterKick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SCCharacterKick& from);
  void MergeFrom(const SCCharacterKick& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 reason = 1;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 1;
  inline ::google::protobuf::int32 reason() const;
  inline void set_reason(::google::protobuf::int32 value);
  
  // optional bytes error = 2;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 2;
  inline const ::std::string& error() const;
  inline void set_error(const ::std::string& value);
  inline void set_error(const char* value);
  inline void set_error(const void* value, size_t size);
  inline ::std::string* mutable_error();
  inline ::std::string* release_error();
  inline void error_to_mbs();
  inline void error_to_utf8();
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SCCharacterKick)
 private:
  inline void set_has_reason();
  inline void clear_has_reason();
  inline void set_has_error();
  inline void clear_has_error();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* error_;
  ::google::protobuf::int32 reason_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_process_5fproto_2f20000_5f29999_5fmisc_2eproto();
  friend void protobuf_AssignDesc_process_5fproto_2f20000_5f29999_5fmisc_2eproto();
  friend void protobuf_ShutdownFile_process_5fproto_2f20000_5f29999_5fmisc_2eproto();
  
  void InitAsDefaultInstance();
  static SCCharacterKick* default_instance_;
};
// -------------------------------------------------------------------

class SCLevelup : public ::google::protobuf::Message {
 public:
  SCLevelup();
  virtual ~SCLevelup();
  
  SCLevelup(const SCLevelup& from);
  
  inline SCLevelup& operator=(const SCLevelup& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SCLevelup& default_instance();
  
  void Swap(SCLevelup* other);
  
  // implements Message ----------------------------------------------
  
  SCLevelup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SCLevelup& from);
  void MergeFrom(const SCLevelup& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);
  
  // required int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SCLevelup)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_process_5fproto_2f20000_5f29999_5fmisc_2eproto();
  friend void protobuf_AssignDesc_process_5fproto_2f20000_5f29999_5fmisc_2eproto();
  friend void protobuf_ShutdownFile_process_5fproto_2f20000_5f29999_5fmisc_2eproto();
  
  void InitAsDefaultInstance();
  static SCLevelup* default_instance_;
};
// -------------------------------------------------------------------

class CSTimeCheck : public ::google::protobuf::Message {
 public:
  CSTimeCheck();
  virtual ~CSTimeCheck();
  
  CSTimeCheck(const CSTimeCheck& from);
  
  inline CSTimeCheck& operator=(const CSTimeCheck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTimeCheck& default_instance();
  
  void Swap(CSTimeCheck* other);
  
  // implements Message ----------------------------------------------
  
  CSTimeCheck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTimeCheck& from);
  void MergeFrom(const CSTimeCheck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline ::google::protobuf::int64 data() const;
  inline void set_data(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.CSTimeCheck)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_process_5fproto_2f20000_5f29999_5fmisc_2eproto();
  friend void protobuf_AssignDesc_process_5fproto_2f20000_5f29999_5fmisc_2eproto();
  friend void protobuf_ShutdownFile_process_5fproto_2f20000_5f29999_5fmisc_2eproto();
  
  void InitAsDefaultInstance();
  static CSTimeCheck* default_instance_;
};
// -------------------------------------------------------------------

class CSPing : public ::google::protobuf::Message {
 public:
  CSPing();
  virtual ~CSPing();
  
  CSPing(const CSPing& from);
  
  inline CSPing& operator=(const CSPing& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPing& default_instance();
  
  void Swap(CSPing* other);
  
  // implements Message ----------------------------------------------
  
  CSPing* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPing& from);
  void MergeFrom(const CSPing& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required float time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline float time() const;
  inline void set_time(float value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.CSPing)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  float time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_process_5fproto_2f20000_5f29999_5fmisc_2eproto();
  friend void protobuf_AssignDesc_process_5fproto_2f20000_5f29999_5fmisc_2eproto();
  friend void protobuf_ShutdownFile_process_5fproto_2f20000_5f29999_5fmisc_2eproto();
  
  void InitAsDefaultInstance();
  static CSPing* default_instance_;
};
// -------------------------------------------------------------------

class SCPong : public ::google::protobuf::Message {
 public:
  SCPong();
  virtual ~SCPong();
  
  SCPong(const SCPong& from);
  
  inline SCPong& operator=(const SCPong& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SCPong& default_instance();
  
  void Swap(SCPong* other);
  
  // implements Message ----------------------------------------------
  
  SCPong* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SCPong& from);
  void MergeFrom(const SCPong& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required float time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline float time() const;
  inline void set_time(float value);
  
  // required int64 server_time = 3;
  inline bool has_server_time() const;
  inline void clear_server_time();
  static const int kServerTimeFieldNumber = 3;
  inline ::google::protobuf::int64 server_time() const;
  inline void set_server_time(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SCPong)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_server_time();
  inline void clear_has_server_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 server_time_;
  float time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_process_5fproto_2f20000_5f29999_5fmisc_2eproto();
  friend void protobuf_AssignDesc_process_5fproto_2f20000_5f29999_5fmisc_2eproto();
  friend void protobuf_ShutdownFile_process_5fproto_2f20000_5f29999_5fmisc_2eproto();
  
  void InitAsDefaultInstance();
  static SCPong* default_instance_;
};
// ===================================================================


// ===================================================================

// SCCharacterKick

// required int32 reason = 1;
inline bool SCCharacterKick::has_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SCCharacterKick::set_has_reason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SCCharacterKick::clear_has_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SCCharacterKick::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::google::protobuf::int32 SCCharacterKick::reason() const {
  return reason_;
}
inline void SCCharacterKick::set_reason(::google::protobuf::int32 value) {
  set_has_reason();
  reason_ = value;
}

// optional bytes error = 2;
inline bool SCCharacterKick::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SCCharacterKick::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SCCharacterKick::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SCCharacterKick::clear_error() {
  if (error_ != &::google::protobuf::internal::kEmptyString) {
    error_->clear();
  }
  clear_has_error();
}
inline void SCCharacterKick::error_to_mbs() {
*error_ = pwutils::utf8_to_mbs(*error_);
}
inline void SCCharacterKick::error_to_utf8() {
*error_ = pwutils::utf8_from_mbs(*error_);
}
inline const ::std::string& SCCharacterKick::error() const {
  return *error_;
}
inline void SCCharacterKick::set_error(const ::std::string& value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    error_ = new ::std::string;
  }
  error_->assign(value);
}
inline void SCCharacterKick::set_error(const char* value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    error_ = new ::std::string;
  }
  error_->assign(value);
}
inline void SCCharacterKick::set_error(const void* value, size_t size) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    error_ = new ::std::string;
  }
  error_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SCCharacterKick::mutable_error() {
  set_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    error_ = new ::std::string;
  }
  return error_;
}
inline ::std::string* SCCharacterKick::release_error() {
  clear_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = error_;
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// SCLevelup

// required int64 id = 1;
inline bool SCLevelup::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SCLevelup::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SCLevelup::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SCLevelup::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 SCLevelup::id() const {
  return id_;
}
inline void SCLevelup::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// required int32 level = 2;
inline bool SCLevelup::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SCLevelup::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SCLevelup::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SCLevelup::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SCLevelup::level() const {
  return level_;
}
inline void SCLevelup::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// CSTimeCheck

// optional int64 data = 1;
inline bool CSTimeCheck::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTimeCheck::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTimeCheck::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTimeCheck::clear_data() {
  data_ = GOOGLE_LONGLONG(0);
  clear_has_data();
}
inline ::google::protobuf::int64 CSTimeCheck::data() const {
  return data_;
}
inline void CSTimeCheck::set_data(::google::protobuf::int64 value) {
  set_has_data();
  data_ = value;
}

// -------------------------------------------------------------------

// CSPing

// required float time = 1;
inline bool CSPing::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPing::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPing::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPing::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline float CSPing::time() const {
  return time_;
}
inline void CSPing::set_time(float value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// SCPong

// required float time = 2;
inline bool SCPong::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SCPong::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SCPong::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SCPong::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline float SCPong::time() const {
  return time_;
}
inline void SCPong::set_time(float value) {
  set_has_time();
  time_ = value;
}

// required int64 server_time = 3;
inline bool SCPong::has_server_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SCPong::set_has_server_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SCPong::clear_has_server_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SCPong::clear_server_time() {
  server_time_ = GOOGLE_LONGLONG(0);
  clear_has_server_time();
}
inline ::google::protobuf::int64 SCPong::server_time() const {
  return server_time_;
}
inline void SCPong::set_server_time(::google::protobuf::int64 value) {
  set_has_server_time();
  server_time_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace worldsrv
}  // namespace protocol
}  // namespace pwngs

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_process_5fproto_2f20000_5f29999_5fmisc_2eproto__INCLUDED
