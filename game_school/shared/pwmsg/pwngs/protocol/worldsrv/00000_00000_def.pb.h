// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pwngs/protocol/worldsrv/00000_00000_def.proto

#ifndef PROTOBUF_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto__INCLUDED
#define PROTOBUF_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto__INCLUDED

#include "pw_iconv.h"
#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace pwngs {
namespace protocol {
namespace worldsrv {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();

class STencentUserInfo;
class SMagicIntensify;
class SMagicType;
class SVector3;
class SAura;
class SMotion;
class SStageInfo;
class SItemModAttr;
class SItemModTrig;
class SCombatPoint;
class SItemFashionParts;
class SItemWing;
class SItemEquip;
class SItemRune;
class SItemBless;
class SItemEgg;
class SItemEquipRune;
class SItemBloodGobm;
class SEquipIndexGem;
class SItemHPMP;
class SItem;
class SItemPrice;
class SPackItem;
class SRandomItem;

// ===================================================================

class STencentUserInfo : public ::google::protobuf::Message {
 public:
  STencentUserInfo();
  virtual ~STencentUserInfo();
  
  STencentUserInfo(const STencentUserInfo& from);
  
  inline STencentUserInfo& operator=(const STencentUserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const STencentUserInfo& default_instance();
  
  void Swap(STencentUserInfo* other);
  
  // implements Message ----------------------------------------------
  
  STencentUserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STencentUserInfo& from);
  void MergeFrom(const STencentUserInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string platform = 1;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 1;
  inline const ::std::string& platform() const;
  inline void set_platform(const ::std::string& value);
  inline void set_platform(const char* value);
  inline void set_platform(const char* value, size_t size);
  inline ::std::string* mutable_platform();
  inline ::std::string* release_platform();
  inline void platform_to_mbs();
  inline void platform_to_utf8();
  
  // required bool is_blue_vip = 2;
  inline bool has_is_blue_vip() const;
  inline void clear_is_blue_vip();
  static const int kIsBlueVipFieldNumber = 2;
  inline bool is_blue_vip() const;
  inline void set_is_blue_vip(bool value);
  
  // required bool is_blue_year_vip = 3;
  inline bool has_is_blue_year_vip() const;
  inline void clear_is_blue_year_vip();
  static const int kIsBlueYearVipFieldNumber = 3;
  inline bool is_blue_year_vip() const;
  inline void set_is_blue_year_vip(bool value);
  
  // required bool is_super_blue_vip = 4;
  inline bool has_is_super_blue_vip() const;
  inline void clear_is_super_blue_vip();
  static const int kIsSuperBlueVipFieldNumber = 4;
  inline bool is_super_blue_vip() const;
  inline void set_is_super_blue_vip(bool value);
  
  // required int32 blue_vip_level = 5;
  inline bool has_blue_vip_level() const;
  inline void clear_blue_vip_level();
  static const int kBlueVipLevelFieldNumber = 5;
  inline ::google::protobuf::int32 blue_vip_level() const;
  inline void set_blue_vip_level(::google::protobuf::int32 value);
  
  // required bool is_yellow_vip = 6;
  inline bool has_is_yellow_vip() const;
  inline void clear_is_yellow_vip();
  static const int kIsYellowVipFieldNumber = 6;
  inline bool is_yellow_vip() const;
  inline void set_is_yellow_vip(bool value);
  
  // required bool is_yellow_year_vip = 7;
  inline bool has_is_yellow_year_vip() const;
  inline void clear_is_yellow_year_vip();
  static const int kIsYellowYearVipFieldNumber = 7;
  inline bool is_yellow_year_vip() const;
  inline void set_is_yellow_year_vip(bool value);
  
  // required bool is_super_yellow_vip = 8;
  inline bool has_is_super_yellow_vip() const;
  inline void clear_is_super_yellow_vip();
  static const int kIsSuperYellowVipFieldNumber = 8;
  inline bool is_super_yellow_vip() const;
  inline void set_is_super_yellow_vip(bool value);
  
  // required int32 yellow_vip_level = 9;
  inline bool has_yellow_vip_level() const;
  inline void clear_yellow_vip_level();
  static const int kYellowVipLevelFieldNumber = 9;
  inline ::google::protobuf::int32 yellow_vip_level() const;
  inline void set_yellow_vip_level(::google::protobuf::int32 value);
  
  // required int32 tgp_level = 10;
  inline bool has_tgp_level() const;
  inline void clear_tgp_level();
  static const int kTgpLevelFieldNumber = 10;
  inline ::google::protobuf::int32 tgp_level() const;
  inline void set_tgp_level(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.STencentUserInfo)
 private:
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_is_blue_vip();
  inline void clear_has_is_blue_vip();
  inline void set_has_is_blue_year_vip();
  inline void clear_has_is_blue_year_vip();
  inline void set_has_is_super_blue_vip();
  inline void clear_has_is_super_blue_vip();
  inline void set_has_blue_vip_level();
  inline void clear_has_blue_vip_level();
  inline void set_has_is_yellow_vip();
  inline void clear_has_is_yellow_vip();
  inline void set_has_is_yellow_year_vip();
  inline void clear_has_is_yellow_year_vip();
  inline void set_has_is_super_yellow_vip();
  inline void clear_has_is_super_yellow_vip();
  inline void set_has_yellow_vip_level();
  inline void clear_has_yellow_vip_level();
  inline void set_has_tgp_level();
  inline void clear_has_tgp_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* platform_;
  bool is_blue_vip_;
  bool is_blue_year_vip_;
  bool is_super_blue_vip_;
  bool is_yellow_vip_;
  ::google::protobuf::int32 blue_vip_level_;
  bool is_yellow_year_vip_;
  bool is_super_yellow_vip_;
  ::google::protobuf::int32 yellow_vip_level_;
  ::google::protobuf::int32 tgp_level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static STencentUserInfo* default_instance_;
};
// -------------------------------------------------------------------

class SMagicIntensify : public ::google::protobuf::Message {
 public:
  SMagicIntensify();
  virtual ~SMagicIntensify();
  
  SMagicIntensify(const SMagicIntensify& from);
  
  inline SMagicIntensify& operator=(const SMagicIntensify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SMagicIntensify& default_instance();
  
  void Swap(SMagicIntensify* other);
  
  // implements Message ----------------------------------------------
  
  SMagicIntensify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SMagicIntensify& from);
  void MergeFrom(const SMagicIntensify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 LevelPencent = 1;
  inline bool has_levelpencent() const;
  inline void clear_levelpencent();
  static const int kLevelPencentFieldNumber = 1;
  inline ::google::protobuf::int32 levelpencent() const;
  inline void set_levelpencent(::google::protobuf::int32 value);
  
  // required int32 LevelValue = 2;
  inline bool has_levelvalue() const;
  inline void clear_levelvalue();
  static const int kLevelValueFieldNumber = 2;
  inline ::google::protobuf::int32 levelvalue() const;
  inline void set_levelvalue(::google::protobuf::int32 value);
  
  // required int32 LevelAddition = 3;
  inline bool has_leveladdition() const;
  inline void clear_leveladdition();
  static const int kLevelAdditionFieldNumber = 3;
  inline ::google::protobuf::int32 leveladdition() const;
  inline void set_leveladdition(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SMagicIntensify)
 private:
  inline void set_has_levelpencent();
  inline void clear_has_levelpencent();
  inline void set_has_levelvalue();
  inline void clear_has_levelvalue();
  inline void set_has_leveladdition();
  inline void clear_has_leveladdition();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 levelpencent_;
  ::google::protobuf::int32 levelvalue_;
  ::google::protobuf::int32 leveladdition_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SMagicIntensify* default_instance_;
};
// -------------------------------------------------------------------

class SMagicType : public ::google::protobuf::Message {
 public:
  SMagicType();
  virtual ~SMagicType();
  
  SMagicType(const SMagicType& from);
  
  inline SMagicType& operator=(const SMagicType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SMagicType& default_instance();
  
  void Swap(SMagicType* other);
  
  // implements Message ----------------------------------------------
  
  SMagicType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SMagicType& from);
  void MergeFrom(const SMagicType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // required int32 loc = 2;
  inline bool has_loc() const;
  inline void clear_loc();
  static const int kLocFieldNumber = 2;
  inline ::google::protobuf::int32 loc() const;
  inline void set_loc(::google::protobuf::int32 value);
  
  // required .pwngs.protocol.worldsrv.SMagicIntensify intensify = 3;
  inline bool has_intensify() const;
  inline void clear_intensify();
  static const int kIntensifyFieldNumber = 3;
  inline const ::pwngs::protocol::worldsrv::SMagicIntensify& intensify() const;
  inline ::pwngs::protocol::worldsrv::SMagicIntensify* mutable_intensify();
  inline ::pwngs::protocol::worldsrv::SMagicIntensify* release_intensify();
  
  // required int64 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::int64 exp() const;
  inline void set_exp(::google::protobuf::int64 value);
  
  // required int32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // required int32 open_level = 6;
  inline bool has_open_level() const;
  inline void clear_open_level();
  static const int kOpenLevelFieldNumber = 6;
  inline ::google::protobuf::int32 open_level() const;
  inline void set_open_level(::google::protobuf::int32 value);
  
  // required int64 combat_point = 7;
  inline bool has_combat_point() const;
  inline void clear_combat_point();
  static const int kCombatPointFieldNumber = 7;
  inline ::google::protobuf::int64 combat_point() const;
  inline void set_combat_point(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SMagicType)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_loc();
  inline void clear_has_loc();
  inline void set_has_intensify();
  inline void clear_has_intensify();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_open_level();
  inline void clear_has_open_level();
  inline void set_has_combat_point();
  inline void clear_has_combat_point();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 loc_;
  ::pwngs::protocol::worldsrv::SMagicIntensify* intensify_;
  ::google::protobuf::int64 exp_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 open_level_;
  ::google::protobuf::int64 combat_point_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SMagicType* default_instance_;
};
// -------------------------------------------------------------------

class SVector3 : public ::google::protobuf::Message {
 public:
  SVector3();
  virtual ~SVector3();
  
  SVector3(const SVector3& from);
  
  inline SVector3& operator=(const SVector3& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SVector3& default_instance();
  
  void Swap(SVector3* other);
  
  // implements Message ----------------------------------------------
  
  SVector3* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SVector3& from);
  void MergeFrom(const SVector3& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);
  
  // required float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);
  
  // required float z = 3;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 3;
  inline float z() const;
  inline void set_z(float value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SVector3)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  float x_;
  float y_;
  float z_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SVector3* default_instance_;
};
// -------------------------------------------------------------------

class SAura : public ::google::protobuf::Message {
 public:
  SAura();
  virtual ~SAura();
  
  SAura(const SAura& from);
  
  inline SAura& operator=(const SAura& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SAura& default_instance();
  
  void Swap(SAura* other);
  
  // implements Message ----------------------------------------------
  
  SAura* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SAura& from);
  void MergeFrom(const SAura& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);
  
  // required int64 caster = 2;
  inline bool has_caster() const;
  inline void clear_caster();
  static const int kCasterFieldNumber = 2;
  inline ::google::protobuf::int64 caster() const;
  inline void set_caster(::google::protobuf::int64 value);
  
  // required int64 owner = 3;
  inline bool has_owner() const;
  inline void clear_owner();
  static const int kOwnerFieldNumber = 3;
  inline ::google::protobuf::int64 owner() const;
  inline void set_owner(::google::protobuf::int64 value);
  
  // required int32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // required int32 overlap_num = 6;
  inline bool has_overlap_num() const;
  inline void clear_overlap_num();
  static const int kOverlapNumFieldNumber = 6;
  inline ::google::protobuf::int32 overlap_num() const;
  inline void set_overlap_num(::google::protobuf::int32 value);
  
  // required int64 duration = 7;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 7;
  inline ::google::protobuf::int64 duration() const;
  inline void set_duration(::google::protobuf::int64 value);
  
  // required int32 param = 8;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 8;
  inline ::google::protobuf::int32 param() const;
  inline void set_param(::google::protobuf::int32 value);
  
  // required int32 level = 9;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 9;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SAura)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_caster();
  inline void clear_has_caster();
  inline void set_has_owner();
  inline void clear_has_owner();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_overlap_num();
  inline void clear_has_overlap_num();
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_level();
  inline void clear_has_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 caster_;
  ::google::protobuf::int64 owner_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 overlap_num_;
  ::google::protobuf::int64 duration_;
  ::google::protobuf::int32 param_;
  ::google::protobuf::int32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SAura* default_instance_;
};
// -------------------------------------------------------------------

class SMotion : public ::google::protobuf::Message {
 public:
  SMotion();
  virtual ~SMotion();
  
  SMotion(const SMotion& from);
  
  inline SMotion& operator=(const SMotion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SMotion& default_instance();
  
  void Swap(SMotion* other);
  
  // implements Message ----------------------------------------------
  
  SMotion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SMotion& from);
  void MergeFrom(const SMotion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 motion_type = 1;
  inline bool has_motion_type() const;
  inline void clear_motion_type();
  static const int kMotionTypeFieldNumber = 1;
  inline ::google::protobuf::int32 motion_type() const;
  inline void set_motion_type(::google::protobuf::int32 value);
  
  // optional int64 motion_target = 2;
  inline bool has_motion_target() const;
  inline void clear_motion_target();
  static const int kMotionTargetFieldNumber = 2;
  inline ::google::protobuf::int64 motion_target() const;
  inline void set_motion_target(::google::protobuf::int64 value);
  
  // optional .pwngs.protocol.worldsrv.SVector3 motion_orientation = 3;
  inline bool has_motion_orientation() const;
  inline void clear_motion_orientation();
  static const int kMotionOrientationFieldNumber = 3;
  inline const ::pwngs::protocol::worldsrv::SVector3& motion_orientation() const;
  inline ::pwngs::protocol::worldsrv::SVector3* mutable_motion_orientation();
  inline ::pwngs::protocol::worldsrv::SVector3* release_motion_orientation();
  
  // optional .pwngs.protocol.worldsrv.SVector3 motion_position = 4;
  inline bool has_motion_position() const;
  inline void clear_motion_position();
  static const int kMotionPositionFieldNumber = 4;
  inline const ::pwngs::protocol::worldsrv::SVector3& motion_position() const;
  inline ::pwngs::protocol::worldsrv::SVector3* mutable_motion_position();
  inline ::pwngs::protocol::worldsrv::SVector3* release_motion_position();
  
  // repeated .pwngs.protocol.worldsrv.SVector3 motion_path = 5;
  inline int motion_path_size() const;
  inline void clear_motion_path();
  static const int kMotionPathFieldNumber = 5;
  inline const ::pwngs::protocol::worldsrv::SVector3& motion_path(int index) const;
  inline ::pwngs::protocol::worldsrv::SVector3* mutable_motion_path(int index);
  inline ::pwngs::protocol::worldsrv::SVector3* add_motion_path();
  inline const ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SVector3 >&
      motion_path() const;
  inline ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SVector3 >*
      mutable_motion_path();
  
  // optional float param = 6;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 6;
  inline float param() const;
  inline void set_param(float value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SMotion)
 private:
  inline void set_has_motion_type();
  inline void clear_has_motion_type();
  inline void set_has_motion_target();
  inline void clear_has_motion_target();
  inline void set_has_motion_orientation();
  inline void clear_has_motion_orientation();
  inline void set_has_motion_position();
  inline void clear_has_motion_position();
  inline void set_has_param();
  inline void clear_has_param();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 motion_target_;
  ::pwngs::protocol::worldsrv::SVector3* motion_orientation_;
  ::google::protobuf::int32 motion_type_;
  float param_;
  ::pwngs::protocol::worldsrv::SVector3* motion_position_;
  ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SVector3 > motion_path_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SMotion* default_instance_;
};
// -------------------------------------------------------------------

class SStageInfo : public ::google::protobuf::Message {
 public:
  SStageInfo();
  virtual ~SStageInfo();
  
  SStageInfo(const SStageInfo& from);
  
  inline SStageInfo& operator=(const SStageInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SStageInfo& default_instance();
  
  void Swap(SStageInfo* other);
  
  // implements Message ----------------------------------------------
  
  SStageInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SStageInfo& from);
  void MergeFrom(const SStageInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);
  
  // required bytes scene = 2;
  inline bool has_scene() const;
  inline void clear_scene();
  static const int kSceneFieldNumber = 2;
  inline const ::std::string& scene() const;
  inline void set_scene(const ::std::string& value);
  inline void set_scene(const char* value);
  inline void set_scene(const void* value, size_t size);
  inline ::std::string* mutable_scene();
  inline ::std::string* release_scene();
  inline void scene_to_mbs();
  inline void scene_to_utf8();
  
  // required bytes scene_navmesh = 3;
  inline bool has_scene_navmesh() const;
  inline void clear_scene_navmesh();
  static const int kSceneNavmeshFieldNumber = 3;
  inline const ::std::string& scene_navmesh() const;
  inline void set_scene_navmesh(const ::std::string& value);
  inline void set_scene_navmesh(const char* value);
  inline void set_scene_navmesh(const void* value, size_t size);
  inline ::std::string* mutable_scene_navmesh();
  inline ::std::string* release_scene_navmesh();
  inline void scene_navmesh_to_mbs();
  inline void scene_navmesh_to_utf8();
  
  // required bytes scene_info = 4;
  inline bool has_scene_info() const;
  inline void clear_scene_info();
  static const int kSceneInfoFieldNumber = 4;
  inline const ::std::string& scene_info() const;
  inline void set_scene_info(const ::std::string& value);
  inline void set_scene_info(const char* value);
  inline void set_scene_info(const void* value, size_t size);
  inline ::std::string* mutable_scene_info();
  inline ::std::string* release_scene_info();
  inline void scene_info_to_mbs();
  inline void scene_info_to_utf8();
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SStageInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_scene();
  inline void clear_has_scene();
  inline void set_has_scene_navmesh();
  inline void clear_has_scene_navmesh();
  inline void set_has_scene_info();
  inline void clear_has_scene_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 id_;
  ::std::string* scene_;
  ::std::string* scene_navmesh_;
  ::std::string* scene_info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SStageInfo* default_instance_;
};
// -------------------------------------------------------------------

class SItemModAttr : public ::google::protobuf::Message {
 public:
  SItemModAttr();
  virtual ~SItemModAttr();
  
  SItemModAttr(const SItemModAttr& from);
  
  inline SItemModAttr& operator=(const SItemModAttr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SItemModAttr& default_instance();
  
  void Swap(SItemModAttr* other);
  
  // implements Message ----------------------------------------------
  
  SItemModAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SItemModAttr& from);
  void MergeFrom(const SItemModAttr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 mod = 1;
  inline bool has_mod() const;
  inline void clear_mod();
  static const int kModFieldNumber = 1;
  inline ::google::protobuf::int32 mod() const;
  inline void set_mod(::google::protobuf::int32 value);
  
  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // required float value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline float value() const;
  inline void set_value(float value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SItemModAttr)
 private:
  inline void set_has_mod();
  inline void clear_has_mod();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 mod_;
  ::google::protobuf::int32 type_;
  float value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SItemModAttr* default_instance_;
};
// -------------------------------------------------------------------

class SItemModTrig : public ::google::protobuf::Message {
 public:
  SItemModTrig();
  virtual ~SItemModTrig();
  
  SItemModTrig(const SItemModTrig& from);
  
  inline SItemModTrig& operator=(const SItemModTrig& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SItemModTrig& default_instance();
  
  void Swap(SItemModTrig* other);
  
  // implements Message ----------------------------------------------
  
  SItemModTrig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SItemModTrig& from);
  void MergeFrom(const SItemModTrig& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 mod = 1;
  inline bool has_mod() const;
  inline void clear_mod();
  static const int kModFieldNumber = 1;
  inline ::google::protobuf::int32 mod() const;
  inline void set_mod(::google::protobuf::int32 value);
  
  // repeated float params = 2;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 2;
  inline float params(int index) const;
  inline void set_params(int index, float value);
  inline void add_params(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      params() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_params();
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SItemModTrig)
 private:
  inline void set_has_mod();
  inline void clear_has_mod();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< float > params_;
  ::google::protobuf::int32 mod_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SItemModTrig* default_instance_;
};
// -------------------------------------------------------------------

class SCombatPoint : public ::google::protobuf::Message {
 public:
  SCombatPoint();
  virtual ~SCombatPoint();
  
  SCombatPoint(const SCombatPoint& from);
  
  inline SCombatPoint& operator=(const SCombatPoint& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SCombatPoint& default_instance();
  
  void Swap(SCombatPoint* other);
  
  // implements Message ----------------------------------------------
  
  SCombatPoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SCombatPoint& from);
  void MergeFrom(const SCombatPoint& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required float zs_point = 1;
  inline bool has_zs_point() const;
  inline void clear_zs_point();
  static const int kZsPointFieldNumber = 1;
  inline float zs_point() const;
  inline void set_zs_point(float value);
  
  // required float gs_point = 2;
  inline bool has_gs_point() const;
  inline void clear_gs_point();
  static const int kGsPointFieldNumber = 2;
  inline float gs_point() const;
  inline void set_gs_point(float value);
  
  // required float fs_point = 3;
  inline bool has_fs_point() const;
  inline void clear_fs_point();
  static const int kFsPointFieldNumber = 3;
  inline float fs_point() const;
  inline void set_fs_point(float value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SCombatPoint)
 private:
  inline void set_has_zs_point();
  inline void clear_has_zs_point();
  inline void set_has_gs_point();
  inline void clear_has_gs_point();
  inline void set_has_fs_point();
  inline void clear_has_fs_point();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  float zs_point_;
  float gs_point_;
  float fs_point_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SCombatPoint* default_instance_;
};
// -------------------------------------------------------------------

class SItemFashionParts : public ::google::protobuf::Message {
 public:
  SItemFashionParts();
  virtual ~SItemFashionParts();
  
  SItemFashionParts(const SItemFashionParts& from);
  
  inline SItemFashionParts& operator=(const SItemFashionParts& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SItemFashionParts& default_instance();
  
  void Swap(SItemFashionParts* other);
  
  // implements Message ----------------------------------------------
  
  SItemFashionParts* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SItemFashionParts& from);
  void MergeFrom(const SItemFashionParts& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 idx = 1;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 1;
  inline ::google::protobuf::int32 idx() const;
  inline void set_idx(::google::protobuf::int32 value);
  
  // required int32 enhance_lv = 2;
  inline bool has_enhance_lv() const;
  inline void clear_enhance_lv();
  static const int kEnhanceLvFieldNumber = 2;
  inline ::google::protobuf::int32 enhance_lv() const;
  inline void set_enhance_lv(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SItemFashionParts)
 private:
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_enhance_lv();
  inline void clear_has_enhance_lv();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 idx_;
  ::google::protobuf::int32 enhance_lv_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SItemFashionParts* default_instance_;
};
// -------------------------------------------------------------------

class SItemWing : public ::google::protobuf::Message {
 public:
  SItemWing();
  virtual ~SItemWing();
  
  SItemWing(const SItemWing& from);
  
  inline SItemWing& operator=(const SItemWing& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SItemWing& default_instance();
  
  void Swap(SItemWing* other);
  
  // implements Message ----------------------------------------------
  
  SItemWing* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SItemWing& from);
  void MergeFrom(const SItemWing& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 exp = 1;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 1;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
  // required int32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);
  
  // required int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // required int32 step = 4;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 4;
  inline ::google::protobuf::int32 step() const;
  inline void set_step(::google::protobuf::int32 value);
  
  // required int32 equip_step = 5;
  inline bool has_equip_step() const;
  inline void clear_equip_step();
  static const int kEquipStepFieldNumber = 5;
  inline ::google::protobuf::int32 equip_step() const;
  inline void set_equip_step(::google::protobuf::int32 value);
  
  // required int32 luck = 6;
  inline bool has_luck() const;
  inline void clear_luck();
  static const int kLuckFieldNumber = 6;
  inline ::google::protobuf::int32 luck() const;
  inline void set_luck(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SItemWing)
 private:
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_equip_step();
  inline void clear_has_equip_step();
  inline void set_has_luck();
  inline void clear_has_luck();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 step_;
  ::google::protobuf::int32 equip_step_;
  ::google::protobuf::int32 luck_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SItemWing* default_instance_;
};
// -------------------------------------------------------------------

class SItemEquip : public ::google::protobuf::Message {
 public:
  SItemEquip();
  virtual ~SItemEquip();
  
  SItemEquip(const SItemEquip& from);
  
  inline SItemEquip& operator=(const SItemEquip& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SItemEquip& default_instance();
  
  void Swap(SItemEquip* other);
  
  // implements Message ----------------------------------------------
  
  SItemEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SItemEquip& from);
  void MergeFrom(const SItemEquip& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 color = 1;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 1;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);
  
  // required int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // required int32 use_level = 3;
  inline bool has_use_level() const;
  inline void clear_use_level();
  static const int kUseLevelFieldNumber = 3;
  inline ::google::protobuf::int32 use_level() const;
  inline void set_use_level(::google::protobuf::int32 value);
  
  // optional int32 star_level = 4;
  inline bool has_star_level() const;
  inline void clear_star_level();
  static const int kStarLevelFieldNumber = 4;
  inline ::google::protobuf::int32 star_level() const;
  inline void set_star_level(::google::protobuf::int32 value);
  
  // optional int32 enchant_level = 5;
  inline bool has_enchant_level() const;
  inline void clear_enchant_level();
  static const int kEnchantLevelFieldNumber = 5;
  inline ::google::protobuf::int32 enchant_level() const;
  inline void set_enchant_level(::google::protobuf::int32 value);
  
  // repeated .pwngs.protocol.worldsrv.SItemModAttr basics_attr = 6;
  inline int basics_attr_size() const;
  inline void clear_basics_attr();
  static const int kBasicsAttrFieldNumber = 6;
  inline const ::pwngs::protocol::worldsrv::SItemModAttr& basics_attr(int index) const;
  inline ::pwngs::protocol::worldsrv::SItemModAttr* mutable_basics_attr(int index);
  inline ::pwngs::protocol::worldsrv::SItemModAttr* add_basics_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr >&
      basics_attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr >*
      mutable_basics_attr();
  
  // repeated .pwngs.protocol.worldsrv.SItemModAttr extends_attr = 7;
  inline int extends_attr_size() const;
  inline void clear_extends_attr();
  static const int kExtendsAttrFieldNumber = 7;
  inline const ::pwngs::protocol::worldsrv::SItemModAttr& extends_attr(int index) const;
  inline ::pwngs::protocol::worldsrv::SItemModAttr* mutable_extends_attr(int index);
  inline ::pwngs::protocol::worldsrv::SItemModAttr* add_extends_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr >&
      extends_attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr >*
      mutable_extends_attr();
  
  // optional .pwngs.protocol.worldsrv.SItemModAttr special_attr = 8;
  inline bool has_special_attr() const;
  inline void clear_special_attr();
  static const int kSpecialAttrFieldNumber = 8;
  inline const ::pwngs::protocol::worldsrv::SItemModAttr& special_attr() const;
  inline ::pwngs::protocol::worldsrv::SItemModAttr* mutable_special_attr();
  inline ::pwngs::protocol::worldsrv::SItemModAttr* release_special_attr();
  
  // optional .pwngs.protocol.worldsrv.SItemModTrig special_trig = 9;
  inline bool has_special_trig() const;
  inline void clear_special_trig();
  static const int kSpecialTrigFieldNumber = 9;
  inline const ::pwngs::protocol::worldsrv::SItemModTrig& special_trig() const;
  inline ::pwngs::protocol::worldsrv::SItemModTrig* mutable_special_trig();
  inline ::pwngs::protocol::worldsrv::SItemModTrig* release_special_trig();
  
  // repeated .pwngs.protocol.worldsrv.SItemFashionParts fashion_parts = 10;
  inline int fashion_parts_size() const;
  inline void clear_fashion_parts();
  static const int kFashionPartsFieldNumber = 10;
  inline const ::pwngs::protocol::worldsrv::SItemFashionParts& fashion_parts(int index) const;
  inline ::pwngs::protocol::worldsrv::SItemFashionParts* mutable_fashion_parts(int index);
  inline ::pwngs::protocol::worldsrv::SItemFashionParts* add_fashion_parts();
  inline const ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemFashionParts >&
      fashion_parts() const;
  inline ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemFashionParts >*
      mutable_fashion_parts();
  
  // optional .pwngs.protocol.worldsrv.SItemWing wing = 11;
  inline bool has_wing() const;
  inline void clear_wing();
  static const int kWingFieldNumber = 11;
  inline const ::pwngs::protocol::worldsrv::SItemWing& wing() const;
  inline ::pwngs::protocol::worldsrv::SItemWing* mutable_wing();
  inline ::pwngs::protocol::worldsrv::SItemWing* release_wing();
  
  // optional int32 skill_id = 12;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 12;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SItemEquip)
 private:
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_use_level();
  inline void clear_has_use_level();
  inline void set_has_star_level();
  inline void clear_has_star_level();
  inline void set_has_enchant_level();
  inline void clear_has_enchant_level();
  inline void set_has_special_attr();
  inline void clear_has_special_attr();
  inline void set_has_special_trig();
  inline void clear_has_special_trig();
  inline void set_has_wing();
  inline void clear_has_wing();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 color_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 use_level_;
  ::google::protobuf::int32 star_level_;
  ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr > basics_attr_;
  ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr > extends_attr_;
  ::pwngs::protocol::worldsrv::SItemModAttr* special_attr_;
  ::google::protobuf::int32 enchant_level_;
  ::google::protobuf::int32 skill_id_;
  ::pwngs::protocol::worldsrv::SItemModTrig* special_trig_;
  ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemFashionParts > fashion_parts_;
  ::pwngs::protocol::worldsrv::SItemWing* wing_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SItemEquip* default_instance_;
};
// -------------------------------------------------------------------

class SItemRune : public ::google::protobuf::Message {
 public:
  SItemRune();
  virtual ~SItemRune();
  
  SItemRune(const SItemRune& from);
  
  inline SItemRune& operator=(const SItemRune& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SItemRune& default_instance();
  
  void Swap(SItemRune* other);
  
  // implements Message ----------------------------------------------
  
  SItemRune* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SItemRune& from);
  void MergeFrom(const SItemRune& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 exp = 1;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 1;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SItemRune)
 private:
  inline void set_has_exp();
  inline void clear_has_exp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 exp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SItemRune* default_instance_;
};
// -------------------------------------------------------------------

class SItemBless : public ::google::protobuf::Message {
 public:
  SItemBless();
  virtual ~SItemBless();
  
  SItemBless(const SItemBless& from);
  
  inline SItemBless& operator=(const SItemBless& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SItemBless& default_instance();
  
  void Swap(SItemBless* other);
  
  // implements Message ----------------------------------------------
  
  SItemBless* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SItemBless& from);
  void MergeFrom(const SItemBless& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .pwngs.protocol.worldsrv.SItemModAttr mod_attrs = 1;
  inline int mod_attrs_size() const;
  inline void clear_mod_attrs();
  static const int kModAttrsFieldNumber = 1;
  inline const ::pwngs::protocol::worldsrv::SItemModAttr& mod_attrs(int index) const;
  inline ::pwngs::protocol::worldsrv::SItemModAttr* mutable_mod_attrs(int index);
  inline ::pwngs::protocol::worldsrv::SItemModAttr* add_mod_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr >&
      mod_attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr >*
      mutable_mod_attrs();
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SItemBless)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr > mod_attrs_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SItemBless* default_instance_;
};
// -------------------------------------------------------------------

class SItemEgg : public ::google::protobuf::Message {
 public:
  SItemEgg();
  virtual ~SItemEgg();
  
  SItemEgg(const SItemEgg& from);
  
  inline SItemEgg& operator=(const SItemEgg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SItemEgg& default_instance();
  
  void Swap(SItemEgg* other);
  
  // implements Message ----------------------------------------------
  
  SItemEgg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SItemEgg& from);
  void MergeFrom(const SItemEgg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required float aptitude = 1;
  inline bool has_aptitude() const;
  inline void clear_aptitude();
  static const int kAptitudeFieldNumber = 1;
  inline float aptitude() const;
  inline void set_aptitude(float value);
  
  // required float fire_dmg = 2;
  inline bool has_fire_dmg() const;
  inline void clear_fire_dmg();
  static const int kFireDmgFieldNumber = 2;
  inline float fire_dmg() const;
  inline void set_fire_dmg(float value);
  
  // required float cold_dmg = 3;
  inline bool has_cold_dmg() const;
  inline void clear_cold_dmg();
  static const int kColdDmgFieldNumber = 3;
  inline float cold_dmg() const;
  inline void set_cold_dmg(float value);
  
  // required float light_dmg = 4;
  inline bool has_light_dmg() const;
  inline void clear_light_dmg();
  static const int kLightDmgFieldNumber = 4;
  inline float light_dmg() const;
  inline void set_light_dmg(float value);
  
  // required float poison_dmg = 5;
  inline bool has_poison_dmg() const;
  inline void clear_poison_dmg();
  static const int kPoisonDmgFieldNumber = 5;
  inline float poison_dmg() const;
  inline void set_poison_dmg(float value);
  
  // required float fire_res = 6;
  inline bool has_fire_res() const;
  inline void clear_fire_res();
  static const int kFireResFieldNumber = 6;
  inline float fire_res() const;
  inline void set_fire_res(float value);
  
  // required float cold_res = 7;
  inline bool has_cold_res() const;
  inline void clear_cold_res();
  static const int kColdResFieldNumber = 7;
  inline float cold_res() const;
  inline void set_cold_res(float value);
  
  // required float light_res = 8;
  inline bool has_light_res() const;
  inline void clear_light_res();
  static const int kLightResFieldNumber = 8;
  inline float light_res() const;
  inline void set_light_res(float value);
  
  // required float poison_res = 9;
  inline bool has_poison_res() const;
  inline void clear_poison_res();
  static const int kPoisonResFieldNumber = 9;
  inline float poison_res() const;
  inline void set_poison_res(float value);
  
  // required float grow_rate = 10;
  inline bool has_grow_rate() const;
  inline void clear_grow_rate();
  static const int kGrowRateFieldNumber = 10;
  inline float grow_rate() const;
  inline void set_grow_rate(float value);
  
  // required float grow_rate_limit = 11;
  inline bool has_grow_rate_limit() const;
  inline void clear_grow_rate_limit();
  static const int kGrowRateLimitFieldNumber = 11;
  inline float grow_rate_limit() const;
  inline void set_grow_rate_limit(float value);
  
  // required float con_rate = 12;
  inline bool has_con_rate() const;
  inline void clear_con_rate();
  static const int kConRateFieldNumber = 12;
  inline float con_rate() const;
  inline void set_con_rate(float value);
  
  // required float con_rate_limit = 13;
  inline bool has_con_rate_limit() const;
  inline void clear_con_rate_limit();
  static const int kConRateLimitFieldNumber = 13;
  inline float con_rate_limit() const;
  inline void set_con_rate_limit(float value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SItemEgg)
 private:
  inline void set_has_aptitude();
  inline void clear_has_aptitude();
  inline void set_has_fire_dmg();
  inline void clear_has_fire_dmg();
  inline void set_has_cold_dmg();
  inline void clear_has_cold_dmg();
  inline void set_has_light_dmg();
  inline void clear_has_light_dmg();
  inline void set_has_poison_dmg();
  inline void clear_has_poison_dmg();
  inline void set_has_fire_res();
  inline void clear_has_fire_res();
  inline void set_has_cold_res();
  inline void clear_has_cold_res();
  inline void set_has_light_res();
  inline void clear_has_light_res();
  inline void set_has_poison_res();
  inline void clear_has_poison_res();
  inline void set_has_grow_rate();
  inline void clear_has_grow_rate();
  inline void set_has_grow_rate_limit();
  inline void clear_has_grow_rate_limit();
  inline void set_has_con_rate();
  inline void clear_has_con_rate();
  inline void set_has_con_rate_limit();
  inline void clear_has_con_rate_limit();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  float aptitude_;
  float fire_dmg_;
  float cold_dmg_;
  float light_dmg_;
  float poison_dmg_;
  float fire_res_;
  float cold_res_;
  float light_res_;
  float poison_res_;
  float grow_rate_;
  float grow_rate_limit_;
  float con_rate_;
  float con_rate_limit_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SItemEgg* default_instance_;
};
// -------------------------------------------------------------------

class SItemEquipRune : public ::google::protobuf::Message {
 public:
  SItemEquipRune();
  virtual ~SItemEquipRune();
  
  SItemEquipRune(const SItemEquipRune& from);
  
  inline SItemEquipRune& operator=(const SItemEquipRune& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SItemEquipRune& default_instance();
  
  void Swap(SItemEquipRune* other);
  
  // implements Message ----------------------------------------------
  
  SItemEquipRune* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SItemEquipRune& from);
  void MergeFrom(const SItemEquipRune& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .pwngs.protocol.worldsrv.SItemModAttr mod_attrs = 1;
  inline int mod_attrs_size() const;
  inline void clear_mod_attrs();
  static const int kModAttrsFieldNumber = 1;
  inline const ::pwngs::protocol::worldsrv::SItemModAttr& mod_attrs(int index) const;
  inline ::pwngs::protocol::worldsrv::SItemModAttr* mutable_mod_attrs(int index);
  inline ::pwngs::protocol::worldsrv::SItemModAttr* add_mod_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr >&
      mod_attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr >*
      mutable_mod_attrs();
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SItemEquipRune)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr > mod_attrs_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SItemEquipRune* default_instance_;
};
// -------------------------------------------------------------------

class SItemBloodGobm : public ::google::protobuf::Message {
 public:
  SItemBloodGobm();
  virtual ~SItemBloodGobm();
  
  SItemBloodGobm(const SItemBloodGobm& from);
  
  inline SItemBloodGobm& operator=(const SItemBloodGobm& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SItemBloodGobm& default_instance();
  
  void Swap(SItemBloodGobm* other);
  
  // implements Message ----------------------------------------------
  
  SItemBloodGobm* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SItemBloodGobm& from);
  void MergeFrom(const SItemBloodGobm& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // required int32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
  // required int32 active_type = 3;
  inline bool has_active_type() const;
  inline void clear_active_type();
  static const int kActiveTypeFieldNumber = 3;
  inline ::google::protobuf::int32 active_type() const;
  inline void set_active_type(::google::protobuf::int32 value);
  
  // required int32 active_param1 = 4;
  inline bool has_active_param1() const;
  inline void clear_active_param1();
  static const int kActiveParam1FieldNumber = 4;
  inline ::google::protobuf::int32 active_param1() const;
  inline void set_active_param1(::google::protobuf::int32 value);
  
  // required int32 active_param2 = 5;
  inline bool has_active_param2() const;
  inline void clear_active_param2();
  static const int kActiveParam2FieldNumber = 5;
  inline ::google::protobuf::int32 active_param2() const;
  inline void set_active_param2(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SItemBloodGobm)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_active_type();
  inline void clear_has_active_type();
  inline void set_has_active_param1();
  inline void clear_has_active_param1();
  inline void set_has_active_param2();
  inline void clear_has_active_param2();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 active_type_;
  ::google::protobuf::int32 active_param1_;
  ::google::protobuf::int32 active_param2_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SItemBloodGobm* default_instance_;
};
// -------------------------------------------------------------------

class SEquipIndexGem : public ::google::protobuf::Message {
 public:
  SEquipIndexGem();
  virtual ~SEquipIndexGem();
  
  SEquipIndexGem(const SEquipIndexGem& from);
  
  inline SEquipIndexGem& operator=(const SEquipIndexGem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SEquipIndexGem& default_instance();
  
  void Swap(SEquipIndexGem* other);
  
  // implements Message ----------------------------------------------
  
  SEquipIndexGem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SEquipIndexGem& from);
  void MergeFrom(const SEquipIndexGem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 equip_index = 1;
  inline bool has_equip_index() const;
  inline void clear_equip_index();
  static const int kEquipIndexFieldNumber = 1;
  inline ::google::protobuf::int32 equip_index() const;
  inline void set_equip_index(::google::protobuf::int32 value);
  
  // repeated .pwngs.protocol.worldsrv.SItem gems = 2;
  inline int gems_size() const;
  inline void clear_gems();
  static const int kGemsFieldNumber = 2;
  inline const ::pwngs::protocol::worldsrv::SItem& gems(int index) const;
  inline ::pwngs::protocol::worldsrv::SItem* mutable_gems(int index);
  inline ::pwngs::protocol::worldsrv::SItem* add_gems();
  inline const ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItem >&
      gems() const;
  inline ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItem >*
      mutable_gems();
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SEquipIndexGem)
 private:
  inline void set_has_equip_index();
  inline void clear_has_equip_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItem > gems_;
  ::google::protobuf::int32 equip_index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SEquipIndexGem* default_instance_;
};
// -------------------------------------------------------------------

class SItemHPMP : public ::google::protobuf::Message {
 public:
  SItemHPMP();
  virtual ~SItemHPMP();
  
  SItemHPMP(const SItemHPMP& from);
  
  inline SItemHPMP& operator=(const SItemHPMP& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SItemHPMP& default_instance();
  
  void Swap(SItemHPMP* other);
  
  // implements Message ----------------------------------------------
  
  SItemHPMP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SItemHPMP& from);
  void MergeFrom(const SItemHPMP& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 used_val = 1;
  inline bool has_used_val() const;
  inline void clear_used_val();
  static const int kUsedValFieldNumber = 1;
  inline ::google::protobuf::int32 used_val() const;
  inline void set_used_val(::google::protobuf::int32 value);
  
  // required int32 total_val = 2;
  inline bool has_total_val() const;
  inline void clear_total_val();
  static const int kTotalValFieldNumber = 2;
  inline ::google::protobuf::int32 total_val() const;
  inline void set_total_val(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SItemHPMP)
 private:
  inline void set_has_used_val();
  inline void clear_has_used_val();
  inline void set_has_total_val();
  inline void clear_has_total_val();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 used_val_;
  ::google::protobuf::int32 total_val_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SItemHPMP* default_instance_;
};
// -------------------------------------------------------------------

class SItem : public ::google::protobuf::Message {
 public:
  SItem();
  virtual ~SItem();
  
  SItem(const SItem& from);
  
  inline SItem& operator=(const SItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SItem& default_instance();
  
  void Swap(SItem* other);
  
  // implements Message ----------------------------------------------
  
  SItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SItem& from);
  void MergeFrom(const SItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);
  
  // required int32 item_type = 2;
  inline bool has_item_type() const;
  inline void clear_item_type();
  static const int kItemTypeFieldNumber = 2;
  inline ::google::protobuf::int32 item_type() const;
  inline void set_item_type(::google::protobuf::int32 value);
  
  // required int32 item_count = 3;
  inline bool has_item_count() const;
  inline void clear_item_count();
  static const int kItemCountFieldNumber = 3;
  inline ::google::protobuf::int32 item_count() const;
  inline void set_item_count(::google::protobuf::int32 value);
  
  // required int32 item_bag = 4;
  inline bool has_item_bag() const;
  inline void clear_item_bag();
  static const int kItemBagFieldNumber = 4;
  inline ::google::protobuf::int32 item_bag() const;
  inline void set_item_bag(::google::protobuf::int32 value);
  
  // required int32 item_position = 5;
  inline bool has_item_position() const;
  inline void clear_item_position();
  static const int kItemPositionFieldNumber = 5;
  inline ::google::protobuf::int32 item_position() const;
  inline void set_item_position(::google::protobuf::int32 value);
  
  // required int64 item_flags = 6;
  inline bool has_item_flags() const;
  inline void clear_item_flags();
  static const int kItemFlagsFieldNumber = 6;
  inline ::google::protobuf::int64 item_flags() const;
  inline void set_item_flags(::google::protobuf::int64 value);
  
  // required int64 expired_time = 7;
  inline bool has_expired_time() const;
  inline void clear_expired_time();
  static const int kExpiredTimeFieldNumber = 7;
  inline ::google::protobuf::int64 expired_time() const;
  inline void set_expired_time(::google::protobuf::int64 value);
  
  // optional int64 item_price = 8;
  inline bool has_item_price() const;
  inline void clear_item_price();
  static const int kItemPriceFieldNumber = 8;
  inline ::google::protobuf::int64 item_price() const;
  inline void set_item_price(::google::protobuf::int64 value);
  
  // optional .pwngs.protocol.worldsrv.SItemEquip equip_attrs = 9;
  inline bool has_equip_attrs() const;
  inline void clear_equip_attrs();
  static const int kEquipAttrsFieldNumber = 9;
  inline const ::pwngs::protocol::worldsrv::SItemEquip& equip_attrs() const;
  inline ::pwngs::protocol::worldsrv::SItemEquip* mutable_equip_attrs();
  inline ::pwngs::protocol::worldsrv::SItemEquip* release_equip_attrs();
  
  // optional .pwngs.protocol.worldsrv.SItemBless bless_attrs = 10;
  inline bool has_bless_attrs() const;
  inline void clear_bless_attrs();
  static const int kBlessAttrsFieldNumber = 10;
  inline const ::pwngs::protocol::worldsrv::SItemBless& bless_attrs() const;
  inline ::pwngs::protocol::worldsrv::SItemBless* mutable_bless_attrs();
  inline ::pwngs::protocol::worldsrv::SItemBless* release_bless_attrs();
  
  // optional .pwngs.protocol.worldsrv.SItemEgg egg_attrs = 11;
  inline bool has_egg_attrs() const;
  inline void clear_egg_attrs();
  static const int kEggAttrsFieldNumber = 11;
  inline const ::pwngs::protocol::worldsrv::SItemEgg& egg_attrs() const;
  inline ::pwngs::protocol::worldsrv::SItemEgg* mutable_egg_attrs();
  inline ::pwngs::protocol::worldsrv::SItemEgg* release_egg_attrs();
  
  // optional .pwngs.protocol.worldsrv.SItemBloodGobm gobm_attrs = 12;
  inline bool has_gobm_attrs() const;
  inline void clear_gobm_attrs();
  static const int kGobmAttrsFieldNumber = 12;
  inline const ::pwngs::protocol::worldsrv::SItemBloodGobm& gobm_attrs() const;
  inline ::pwngs::protocol::worldsrv::SItemBloodGobm* mutable_gobm_attrs();
  inline ::pwngs::protocol::worldsrv::SItemBloodGobm* release_gobm_attrs();
  
  // optional .pwngs.protocol.worldsrv.SCombatPoint combat_point = 13;
  inline bool has_combat_point() const;
  inline void clear_combat_point();
  static const int kCombatPointFieldNumber = 13;
  inline const ::pwngs::protocol::worldsrv::SCombatPoint& combat_point() const;
  inline ::pwngs::protocol::worldsrv::SCombatPoint* mutable_combat_point();
  inline ::pwngs::protocol::worldsrv::SCombatPoint* release_combat_point();
  
  // optional .pwngs.protocol.worldsrv.SItemHPMP hpmp_attrs = 14;
  inline bool has_hpmp_attrs() const;
  inline void clear_hpmp_attrs();
  static const int kHpmpAttrsFieldNumber = 14;
  inline const ::pwngs::protocol::worldsrv::SItemHPMP& hpmp_attrs() const;
  inline ::pwngs::protocol::worldsrv::SItemHPMP* mutable_hpmp_attrs();
  inline ::pwngs::protocol::worldsrv::SItemHPMP* release_hpmp_attrs();
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SItem)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_type();
  inline void clear_has_item_type();
  inline void set_has_item_count();
  inline void clear_has_item_count();
  inline void set_has_item_bag();
  inline void clear_has_item_bag();
  inline void set_has_item_position();
  inline void clear_has_item_position();
  inline void set_has_item_flags();
  inline void clear_has_item_flags();
  inline void set_has_expired_time();
  inline void clear_has_expired_time();
  inline void set_has_item_price();
  inline void clear_has_item_price();
  inline void set_has_equip_attrs();
  inline void clear_has_equip_attrs();
  inline void set_has_bless_attrs();
  inline void clear_has_bless_attrs();
  inline void set_has_egg_attrs();
  inline void clear_has_egg_attrs();
  inline void set_has_gobm_attrs();
  inline void clear_has_gobm_attrs();
  inline void set_has_combat_point();
  inline void clear_has_combat_point();
  inline void set_has_hpmp_attrs();
  inline void clear_has_hpmp_attrs();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 item_id_;
  ::google::protobuf::int32 item_type_;
  ::google::protobuf::int32 item_count_;
  ::google::protobuf::int32 item_bag_;
  ::google::protobuf::int32 item_position_;
  ::google::protobuf::int64 item_flags_;
  ::google::protobuf::int64 expired_time_;
  ::google::protobuf::int64 item_price_;
  ::pwngs::protocol::worldsrv::SItemEquip* equip_attrs_;
  ::pwngs::protocol::worldsrv::SItemBless* bless_attrs_;
  ::pwngs::protocol::worldsrv::SItemEgg* egg_attrs_;
  ::pwngs::protocol::worldsrv::SItemBloodGobm* gobm_attrs_;
  ::pwngs::protocol::worldsrv::SCombatPoint* combat_point_;
  ::pwngs::protocol::worldsrv::SItemHPMP* hpmp_attrs_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SItem* default_instance_;
};
// -------------------------------------------------------------------

class SItemPrice : public ::google::protobuf::Message {
 public:
  SItemPrice();
  virtual ~SItemPrice();
  
  SItemPrice(const SItemPrice& from);
  
  inline SItemPrice& operator=(const SItemPrice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SItemPrice& default_instance();
  
  void Swap(SItemPrice* other);
  
  // implements Message ----------------------------------------------
  
  SItemPrice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SItemPrice& from);
  void MergeFrom(const SItemPrice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  inline ::google::protobuf::int32 tid() const;
  inline void set_tid(::google::protobuf::int32 value);
  
  // required int32 price = 2;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 2;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SItemPrice)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_price();
  inline void clear_has_price();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 price_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SItemPrice* default_instance_;
};
// -------------------------------------------------------------------

class SPackItem : public ::google::protobuf::Message {
 public:
  SPackItem();
  virtual ~SPackItem();
  
  SPackItem(const SPackItem& from);
  
  inline SPackItem& operator=(const SPackItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SPackItem& default_instance();
  
  void Swap(SPackItem* other);
  
  // implements Message ----------------------------------------------
  
  SPackItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SPackItem& from);
  void MergeFrom(const SPackItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  inline ::google::protobuf::int32 tid() const;
  inline void set_tid(::google::protobuf::int32 value);
  
  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SPackItem)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SPackItem* default_instance_;
};
// -------------------------------------------------------------------

class SRandomItem : public ::google::protobuf::Message {
 public:
  SRandomItem();
  virtual ~SRandomItem();
  
  SRandomItem(const SRandomItem& from);
  
  inline SRandomItem& operator=(const SRandomItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SRandomItem& default_instance();
  
  void Swap(SRandomItem* other);
  
  // implements Message ----------------------------------------------
  
  SRandomItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SRandomItem& from);
  void MergeFrom(const SRandomItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 random_item_type = 1;
  inline bool has_random_item_type() const;
  inline void clear_random_item_type();
  static const int kRandomItemTypeFieldNumber = 1;
  inline ::google::protobuf::int32 random_item_type() const;
  inline void set_random_item_type(::google::protobuf::int32 value);
  
  // required .pwngs.protocol.worldsrv.SPackItem pack_item = 2;
  inline bool has_pack_item() const;
  inline void clear_pack_item();
  static const int kPackItemFieldNumber = 2;
  inline const ::pwngs::protocol::worldsrv::SPackItem& pack_item() const;
  inline ::pwngs::protocol::worldsrv::SPackItem* mutable_pack_item();
  inline ::pwngs::protocol::worldsrv::SPackItem* release_pack_item();
  
  // @@protoc_insertion_point(class_scope:pwngs.protocol.worldsrv.SRandomItem)
 private:
  inline void set_has_random_item_type();
  inline void clear_has_random_item_type();
  inline void set_has_pack_item();
  inline void clear_has_pack_item();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::pwngs::protocol::worldsrv::SPackItem* pack_item_;
  ::google::protobuf::int32 random_item_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_AssignDesc_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  friend void protobuf_ShutdownFile_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto();
  
  void InitAsDefaultInstance();
  static SRandomItem* default_instance_;
};
// ===================================================================


// ===================================================================

// STencentUserInfo

// required string platform = 1;
inline bool STencentUserInfo::has_platform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STencentUserInfo::set_has_platform() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STencentUserInfo::clear_has_platform() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STencentUserInfo::clear_platform() {
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    platform_->clear();
  }
  clear_has_platform();
}
inline void STencentUserInfo::platform_to_mbs() {
*platform_ = pwutils::utf8_to_mbs(*platform_);
}
inline void STencentUserInfo::platform_to_utf8() {
*platform_ = pwutils::utf8_from_mbs(*platform_);
}
inline const ::std::string& STencentUserInfo::platform() const {
  return *platform_;
}
inline void STencentUserInfo::set_platform(const ::std::string& value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void STencentUserInfo::set_platform(const char* value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void STencentUserInfo::set_platform(const char* value, size_t size) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* STencentUserInfo::mutable_platform() {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  return platform_;
}
inline ::std::string* STencentUserInfo::release_platform() {
  clear_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = platform_;
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bool is_blue_vip = 2;
inline bool STencentUserInfo::has_is_blue_vip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STencentUserInfo::set_has_is_blue_vip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STencentUserInfo::clear_has_is_blue_vip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STencentUserInfo::clear_is_blue_vip() {
  is_blue_vip_ = false;
  clear_has_is_blue_vip();
}
inline bool STencentUserInfo::is_blue_vip() const {
  return is_blue_vip_;
}
inline void STencentUserInfo::set_is_blue_vip(bool value) {
  set_has_is_blue_vip();
  is_blue_vip_ = value;
}

// required bool is_blue_year_vip = 3;
inline bool STencentUserInfo::has_is_blue_year_vip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void STencentUserInfo::set_has_is_blue_year_vip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void STencentUserInfo::clear_has_is_blue_year_vip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void STencentUserInfo::clear_is_blue_year_vip() {
  is_blue_year_vip_ = false;
  clear_has_is_blue_year_vip();
}
inline bool STencentUserInfo::is_blue_year_vip() const {
  return is_blue_year_vip_;
}
inline void STencentUserInfo::set_is_blue_year_vip(bool value) {
  set_has_is_blue_year_vip();
  is_blue_year_vip_ = value;
}

// required bool is_super_blue_vip = 4;
inline bool STencentUserInfo::has_is_super_blue_vip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void STencentUserInfo::set_has_is_super_blue_vip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void STencentUserInfo::clear_has_is_super_blue_vip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void STencentUserInfo::clear_is_super_blue_vip() {
  is_super_blue_vip_ = false;
  clear_has_is_super_blue_vip();
}
inline bool STencentUserInfo::is_super_blue_vip() const {
  return is_super_blue_vip_;
}
inline void STencentUserInfo::set_is_super_blue_vip(bool value) {
  set_has_is_super_blue_vip();
  is_super_blue_vip_ = value;
}

// required int32 blue_vip_level = 5;
inline bool STencentUserInfo::has_blue_vip_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void STencentUserInfo::set_has_blue_vip_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void STencentUserInfo::clear_has_blue_vip_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void STencentUserInfo::clear_blue_vip_level() {
  blue_vip_level_ = 0;
  clear_has_blue_vip_level();
}
inline ::google::protobuf::int32 STencentUserInfo::blue_vip_level() const {
  return blue_vip_level_;
}
inline void STencentUserInfo::set_blue_vip_level(::google::protobuf::int32 value) {
  set_has_blue_vip_level();
  blue_vip_level_ = value;
}

// required bool is_yellow_vip = 6;
inline bool STencentUserInfo::has_is_yellow_vip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void STencentUserInfo::set_has_is_yellow_vip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void STencentUserInfo::clear_has_is_yellow_vip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void STencentUserInfo::clear_is_yellow_vip() {
  is_yellow_vip_ = false;
  clear_has_is_yellow_vip();
}
inline bool STencentUserInfo::is_yellow_vip() const {
  return is_yellow_vip_;
}
inline void STencentUserInfo::set_is_yellow_vip(bool value) {
  set_has_is_yellow_vip();
  is_yellow_vip_ = value;
}

// required bool is_yellow_year_vip = 7;
inline bool STencentUserInfo::has_is_yellow_year_vip() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void STencentUserInfo::set_has_is_yellow_year_vip() {
  _has_bits_[0] |= 0x00000040u;
}
inline void STencentUserInfo::clear_has_is_yellow_year_vip() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void STencentUserInfo::clear_is_yellow_year_vip() {
  is_yellow_year_vip_ = false;
  clear_has_is_yellow_year_vip();
}
inline bool STencentUserInfo::is_yellow_year_vip() const {
  return is_yellow_year_vip_;
}
inline void STencentUserInfo::set_is_yellow_year_vip(bool value) {
  set_has_is_yellow_year_vip();
  is_yellow_year_vip_ = value;
}

// required bool is_super_yellow_vip = 8;
inline bool STencentUserInfo::has_is_super_yellow_vip() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void STencentUserInfo::set_has_is_super_yellow_vip() {
  _has_bits_[0] |= 0x00000080u;
}
inline void STencentUserInfo::clear_has_is_super_yellow_vip() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void STencentUserInfo::clear_is_super_yellow_vip() {
  is_super_yellow_vip_ = false;
  clear_has_is_super_yellow_vip();
}
inline bool STencentUserInfo::is_super_yellow_vip() const {
  return is_super_yellow_vip_;
}
inline void STencentUserInfo::set_is_super_yellow_vip(bool value) {
  set_has_is_super_yellow_vip();
  is_super_yellow_vip_ = value;
}

// required int32 yellow_vip_level = 9;
inline bool STencentUserInfo::has_yellow_vip_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void STencentUserInfo::set_has_yellow_vip_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void STencentUserInfo::clear_has_yellow_vip_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void STencentUserInfo::clear_yellow_vip_level() {
  yellow_vip_level_ = 0;
  clear_has_yellow_vip_level();
}
inline ::google::protobuf::int32 STencentUserInfo::yellow_vip_level() const {
  return yellow_vip_level_;
}
inline void STencentUserInfo::set_yellow_vip_level(::google::protobuf::int32 value) {
  set_has_yellow_vip_level();
  yellow_vip_level_ = value;
}

// required int32 tgp_level = 10;
inline bool STencentUserInfo::has_tgp_level() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void STencentUserInfo::set_has_tgp_level() {
  _has_bits_[0] |= 0x00000200u;
}
inline void STencentUserInfo::clear_has_tgp_level() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void STencentUserInfo::clear_tgp_level() {
  tgp_level_ = 0;
  clear_has_tgp_level();
}
inline ::google::protobuf::int32 STencentUserInfo::tgp_level() const {
  return tgp_level_;
}
inline void STencentUserInfo::set_tgp_level(::google::protobuf::int32 value) {
  set_has_tgp_level();
  tgp_level_ = value;
}

// -------------------------------------------------------------------

// SMagicIntensify

// required int32 LevelPencent = 1;
inline bool SMagicIntensify::has_levelpencent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SMagicIntensify::set_has_levelpencent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SMagicIntensify::clear_has_levelpencent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SMagicIntensify::clear_levelpencent() {
  levelpencent_ = 0;
  clear_has_levelpencent();
}
inline ::google::protobuf::int32 SMagicIntensify::levelpencent() const {
  return levelpencent_;
}
inline void SMagicIntensify::set_levelpencent(::google::protobuf::int32 value) {
  set_has_levelpencent();
  levelpencent_ = value;
}

// required int32 LevelValue = 2;
inline bool SMagicIntensify::has_levelvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SMagicIntensify::set_has_levelvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SMagicIntensify::clear_has_levelvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SMagicIntensify::clear_levelvalue() {
  levelvalue_ = 0;
  clear_has_levelvalue();
}
inline ::google::protobuf::int32 SMagicIntensify::levelvalue() const {
  return levelvalue_;
}
inline void SMagicIntensify::set_levelvalue(::google::protobuf::int32 value) {
  set_has_levelvalue();
  levelvalue_ = value;
}

// required int32 LevelAddition = 3;
inline bool SMagicIntensify::has_leveladdition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SMagicIntensify::set_has_leveladdition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SMagicIntensify::clear_has_leveladdition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SMagicIntensify::clear_leveladdition() {
  leveladdition_ = 0;
  clear_has_leveladdition();
}
inline ::google::protobuf::int32 SMagicIntensify::leveladdition() const {
  return leveladdition_;
}
inline void SMagicIntensify::set_leveladdition(::google::protobuf::int32 value) {
  set_has_leveladdition();
  leveladdition_ = value;
}

// -------------------------------------------------------------------

// SMagicType

// required int32 id = 1;
inline bool SMagicType::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SMagicType::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SMagicType::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SMagicType::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SMagicType::id() const {
  return id_;
}
inline void SMagicType::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 loc = 2;
inline bool SMagicType::has_loc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SMagicType::set_has_loc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SMagicType::clear_has_loc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SMagicType::clear_loc() {
  loc_ = 0;
  clear_has_loc();
}
inline ::google::protobuf::int32 SMagicType::loc() const {
  return loc_;
}
inline void SMagicType::set_loc(::google::protobuf::int32 value) {
  set_has_loc();
  loc_ = value;
}

// required .pwngs.protocol.worldsrv.SMagicIntensify intensify = 3;
inline bool SMagicType::has_intensify() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SMagicType::set_has_intensify() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SMagicType::clear_has_intensify() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SMagicType::clear_intensify() {
  if (intensify_ != NULL) intensify_->::pwngs::protocol::worldsrv::SMagicIntensify::Clear();
  clear_has_intensify();
}
inline const ::pwngs::protocol::worldsrv::SMagicIntensify& SMagicType::intensify() const {
  return intensify_ != NULL ? *intensify_ : *default_instance_->intensify_;
}
inline ::pwngs::protocol::worldsrv::SMagicIntensify* SMagicType::mutable_intensify() {
  set_has_intensify();
  if (intensify_ == NULL) intensify_ = new ::pwngs::protocol::worldsrv::SMagicIntensify;
  return intensify_;
}
inline ::pwngs::protocol::worldsrv::SMagicIntensify* SMagicType::release_intensify() {
  clear_has_intensify();
  ::pwngs::protocol::worldsrv::SMagicIntensify* temp = intensify_;
  intensify_ = NULL;
  return temp;
}

// required int64 exp = 4;
inline bool SMagicType::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SMagicType::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SMagicType::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SMagicType::clear_exp() {
  exp_ = GOOGLE_LONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::int64 SMagicType::exp() const {
  return exp_;
}
inline void SMagicType::set_exp(::google::protobuf::int64 value) {
  set_has_exp();
  exp_ = value;
}

// required int32 level = 5;
inline bool SMagicType::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SMagicType::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SMagicType::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SMagicType::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SMagicType::level() const {
  return level_;
}
inline void SMagicType::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required int32 open_level = 6;
inline bool SMagicType::has_open_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SMagicType::set_has_open_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SMagicType::clear_has_open_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SMagicType::clear_open_level() {
  open_level_ = 0;
  clear_has_open_level();
}
inline ::google::protobuf::int32 SMagicType::open_level() const {
  return open_level_;
}
inline void SMagicType::set_open_level(::google::protobuf::int32 value) {
  set_has_open_level();
  open_level_ = value;
}

// required int64 combat_point = 7;
inline bool SMagicType::has_combat_point() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SMagicType::set_has_combat_point() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SMagicType::clear_has_combat_point() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SMagicType::clear_combat_point() {
  combat_point_ = GOOGLE_LONGLONG(0);
  clear_has_combat_point();
}
inline ::google::protobuf::int64 SMagicType::combat_point() const {
  return combat_point_;
}
inline void SMagicType::set_combat_point(::google::protobuf::int64 value) {
  set_has_combat_point();
  combat_point_ = value;
}

// -------------------------------------------------------------------

// SVector3

// required float x = 1;
inline bool SVector3::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SVector3::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SVector3::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SVector3::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float SVector3::x() const {
  return x_;
}
inline void SVector3::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 2;
inline bool SVector3::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SVector3::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SVector3::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SVector3::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float SVector3::y() const {
  return y_;
}
inline void SVector3::set_y(float value) {
  set_has_y();
  y_ = value;
}

// required float z = 3;
inline bool SVector3::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SVector3::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SVector3::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SVector3::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float SVector3::z() const {
  return z_;
}
inline void SVector3::set_z(float value) {
  set_has_z();
  z_ = value;
}

// -------------------------------------------------------------------

// SAura

// required int64 id = 1;
inline bool SAura::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SAura::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SAura::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SAura::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 SAura::id() const {
  return id_;
}
inline void SAura::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// required int64 caster = 2;
inline bool SAura::has_caster() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SAura::set_has_caster() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SAura::clear_has_caster() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SAura::clear_caster() {
  caster_ = GOOGLE_LONGLONG(0);
  clear_has_caster();
}
inline ::google::protobuf::int64 SAura::caster() const {
  return caster_;
}
inline void SAura::set_caster(::google::protobuf::int64 value) {
  set_has_caster();
  caster_ = value;
}

// required int64 owner = 3;
inline bool SAura::has_owner() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SAura::set_has_owner() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SAura::clear_has_owner() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SAura::clear_owner() {
  owner_ = GOOGLE_LONGLONG(0);
  clear_has_owner();
}
inline ::google::protobuf::int64 SAura::owner() const {
  return owner_;
}
inline void SAura::set_owner(::google::protobuf::int64 value) {
  set_has_owner();
  owner_ = value;
}

// required int32 type = 5;
inline bool SAura::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SAura::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SAura::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SAura::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SAura::type() const {
  return type_;
}
inline void SAura::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 overlap_num = 6;
inline bool SAura::has_overlap_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SAura::set_has_overlap_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SAura::clear_has_overlap_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SAura::clear_overlap_num() {
  overlap_num_ = 0;
  clear_has_overlap_num();
}
inline ::google::protobuf::int32 SAura::overlap_num() const {
  return overlap_num_;
}
inline void SAura::set_overlap_num(::google::protobuf::int32 value) {
  set_has_overlap_num();
  overlap_num_ = value;
}

// required int64 duration = 7;
inline bool SAura::has_duration() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SAura::set_has_duration() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SAura::clear_has_duration() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SAura::clear_duration() {
  duration_ = GOOGLE_LONGLONG(0);
  clear_has_duration();
}
inline ::google::protobuf::int64 SAura::duration() const {
  return duration_;
}
inline void SAura::set_duration(::google::protobuf::int64 value) {
  set_has_duration();
  duration_ = value;
}

// required int32 param = 8;
inline bool SAura::has_param() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SAura::set_has_param() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SAura::clear_has_param() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SAura::clear_param() {
  param_ = 0;
  clear_has_param();
}
inline ::google::protobuf::int32 SAura::param() const {
  return param_;
}
inline void SAura::set_param(::google::protobuf::int32 value) {
  set_has_param();
  param_ = value;
}

// required int32 level = 9;
inline bool SAura::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SAura::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SAura::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SAura::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SAura::level() const {
  return level_;
}
inline void SAura::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// SMotion

// required int32 motion_type = 1;
inline bool SMotion::has_motion_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SMotion::set_has_motion_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SMotion::clear_has_motion_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SMotion::clear_motion_type() {
  motion_type_ = 0;
  clear_has_motion_type();
}
inline ::google::protobuf::int32 SMotion::motion_type() const {
  return motion_type_;
}
inline void SMotion::set_motion_type(::google::protobuf::int32 value) {
  set_has_motion_type();
  motion_type_ = value;
}

// optional int64 motion_target = 2;
inline bool SMotion::has_motion_target() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SMotion::set_has_motion_target() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SMotion::clear_has_motion_target() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SMotion::clear_motion_target() {
  motion_target_ = GOOGLE_LONGLONG(0);
  clear_has_motion_target();
}
inline ::google::protobuf::int64 SMotion::motion_target() const {
  return motion_target_;
}
inline void SMotion::set_motion_target(::google::protobuf::int64 value) {
  set_has_motion_target();
  motion_target_ = value;
}

// optional .pwngs.protocol.worldsrv.SVector3 motion_orientation = 3;
inline bool SMotion::has_motion_orientation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SMotion::set_has_motion_orientation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SMotion::clear_has_motion_orientation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SMotion::clear_motion_orientation() {
  if (motion_orientation_ != NULL) motion_orientation_->::pwngs::protocol::worldsrv::SVector3::Clear();
  clear_has_motion_orientation();
}
inline const ::pwngs::protocol::worldsrv::SVector3& SMotion::motion_orientation() const {
  return motion_orientation_ != NULL ? *motion_orientation_ : *default_instance_->motion_orientation_;
}
inline ::pwngs::protocol::worldsrv::SVector3* SMotion::mutable_motion_orientation() {
  set_has_motion_orientation();
  if (motion_orientation_ == NULL) motion_orientation_ = new ::pwngs::protocol::worldsrv::SVector3;
  return motion_orientation_;
}
inline ::pwngs::protocol::worldsrv::SVector3* SMotion::release_motion_orientation() {
  clear_has_motion_orientation();
  ::pwngs::protocol::worldsrv::SVector3* temp = motion_orientation_;
  motion_orientation_ = NULL;
  return temp;
}

// optional .pwngs.protocol.worldsrv.SVector3 motion_position = 4;
inline bool SMotion::has_motion_position() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SMotion::set_has_motion_position() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SMotion::clear_has_motion_position() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SMotion::clear_motion_position() {
  if (motion_position_ != NULL) motion_position_->::pwngs::protocol::worldsrv::SVector3::Clear();
  clear_has_motion_position();
}
inline const ::pwngs::protocol::worldsrv::SVector3& SMotion::motion_position() const {
  return motion_position_ != NULL ? *motion_position_ : *default_instance_->motion_position_;
}
inline ::pwngs::protocol::worldsrv::SVector3* SMotion::mutable_motion_position() {
  set_has_motion_position();
  if (motion_position_ == NULL) motion_position_ = new ::pwngs::protocol::worldsrv::SVector3;
  return motion_position_;
}
inline ::pwngs::protocol::worldsrv::SVector3* SMotion::release_motion_position() {
  clear_has_motion_position();
  ::pwngs::protocol::worldsrv::SVector3* temp = motion_position_;
  motion_position_ = NULL;
  return temp;
}

// repeated .pwngs.protocol.worldsrv.SVector3 motion_path = 5;
inline int SMotion::motion_path_size() const {
  return motion_path_.size();
}
inline void SMotion::clear_motion_path() {
  motion_path_.Clear();
}
inline const ::pwngs::protocol::worldsrv::SVector3& SMotion::motion_path(int index) const {
  return motion_path_.Get(index);
}
inline ::pwngs::protocol::worldsrv::SVector3* SMotion::mutable_motion_path(int index) {
  return motion_path_.Mutable(index);
}
inline ::pwngs::protocol::worldsrv::SVector3* SMotion::add_motion_path() {
  return motion_path_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SVector3 >&
SMotion::motion_path() const {
  return motion_path_;
}
inline ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SVector3 >*
SMotion::mutable_motion_path() {
  return &motion_path_;
}

// optional float param = 6;
inline bool SMotion::has_param() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SMotion::set_has_param() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SMotion::clear_has_param() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SMotion::clear_param() {
  param_ = 0;
  clear_has_param();
}
inline float SMotion::param() const {
  return param_;
}
inline void SMotion::set_param(float value) {
  set_has_param();
  param_ = value;
}

// -------------------------------------------------------------------

// SStageInfo

// required int64 id = 1;
inline bool SStageInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SStageInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SStageInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SStageInfo::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 SStageInfo::id() const {
  return id_;
}
inline void SStageInfo::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// required bytes scene = 2;
inline bool SStageInfo::has_scene() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SStageInfo::set_has_scene() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SStageInfo::clear_has_scene() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SStageInfo::clear_scene() {
  if (scene_ != &::google::protobuf::internal::kEmptyString) {
    scene_->clear();
  }
  clear_has_scene();
}
inline void SStageInfo::scene_to_mbs() {
*scene_ = pwutils::utf8_to_mbs(*scene_);
}
inline void SStageInfo::scene_to_utf8() {
*scene_ = pwutils::utf8_from_mbs(*scene_);
}
inline const ::std::string& SStageInfo::scene() const {
  return *scene_;
}
inline void SStageInfo::set_scene(const ::std::string& value) {
  set_has_scene();
  if (scene_ == &::google::protobuf::internal::kEmptyString) {
    scene_ = new ::std::string;
  }
  scene_->assign(value);
}
inline void SStageInfo::set_scene(const char* value) {
  set_has_scene();
  if (scene_ == &::google::protobuf::internal::kEmptyString) {
    scene_ = new ::std::string;
  }
  scene_->assign(value);
}
inline void SStageInfo::set_scene(const void* value, size_t size) {
  set_has_scene();
  if (scene_ == &::google::protobuf::internal::kEmptyString) {
    scene_ = new ::std::string;
  }
  scene_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SStageInfo::mutable_scene() {
  set_has_scene();
  if (scene_ == &::google::protobuf::internal::kEmptyString) {
    scene_ = new ::std::string;
  }
  return scene_;
}
inline ::std::string* SStageInfo::release_scene() {
  clear_has_scene();
  if (scene_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = scene_;
    scene_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bytes scene_navmesh = 3;
inline bool SStageInfo::has_scene_navmesh() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SStageInfo::set_has_scene_navmesh() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SStageInfo::clear_has_scene_navmesh() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SStageInfo::clear_scene_navmesh() {
  if (scene_navmesh_ != &::google::protobuf::internal::kEmptyString) {
    scene_navmesh_->clear();
  }
  clear_has_scene_navmesh();
}
inline void SStageInfo::scene_navmesh_to_mbs() {
*scene_navmesh_ = pwutils::utf8_to_mbs(*scene_navmesh_);
}
inline void SStageInfo::scene_navmesh_to_utf8() {
*scene_navmesh_ = pwutils::utf8_from_mbs(*scene_navmesh_);
}
inline const ::std::string& SStageInfo::scene_navmesh() const {
  return *scene_navmesh_;
}
inline void SStageInfo::set_scene_navmesh(const ::std::string& value) {
  set_has_scene_navmesh();
  if (scene_navmesh_ == &::google::protobuf::internal::kEmptyString) {
    scene_navmesh_ = new ::std::string;
  }
  scene_navmesh_->assign(value);
}
inline void SStageInfo::set_scene_navmesh(const char* value) {
  set_has_scene_navmesh();
  if (scene_navmesh_ == &::google::protobuf::internal::kEmptyString) {
    scene_navmesh_ = new ::std::string;
  }
  scene_navmesh_->assign(value);
}
inline void SStageInfo::set_scene_navmesh(const void* value, size_t size) {
  set_has_scene_navmesh();
  if (scene_navmesh_ == &::google::protobuf::internal::kEmptyString) {
    scene_navmesh_ = new ::std::string;
  }
  scene_navmesh_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SStageInfo::mutable_scene_navmesh() {
  set_has_scene_navmesh();
  if (scene_navmesh_ == &::google::protobuf::internal::kEmptyString) {
    scene_navmesh_ = new ::std::string;
  }
  return scene_navmesh_;
}
inline ::std::string* SStageInfo::release_scene_navmesh() {
  clear_has_scene_navmesh();
  if (scene_navmesh_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = scene_navmesh_;
    scene_navmesh_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bytes scene_info = 4;
inline bool SStageInfo::has_scene_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SStageInfo::set_has_scene_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SStageInfo::clear_has_scene_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SStageInfo::clear_scene_info() {
  if (scene_info_ != &::google::protobuf::internal::kEmptyString) {
    scene_info_->clear();
  }
  clear_has_scene_info();
}
inline void SStageInfo::scene_info_to_mbs() {
*scene_info_ = pwutils::utf8_to_mbs(*scene_info_);
}
inline void SStageInfo::scene_info_to_utf8() {
*scene_info_ = pwutils::utf8_from_mbs(*scene_info_);
}
inline const ::std::string& SStageInfo::scene_info() const {
  return *scene_info_;
}
inline void SStageInfo::set_scene_info(const ::std::string& value) {
  set_has_scene_info();
  if (scene_info_ == &::google::protobuf::internal::kEmptyString) {
    scene_info_ = new ::std::string;
  }
  scene_info_->assign(value);
}
inline void SStageInfo::set_scene_info(const char* value) {
  set_has_scene_info();
  if (scene_info_ == &::google::protobuf::internal::kEmptyString) {
    scene_info_ = new ::std::string;
  }
  scene_info_->assign(value);
}
inline void SStageInfo::set_scene_info(const void* value, size_t size) {
  set_has_scene_info();
  if (scene_info_ == &::google::protobuf::internal::kEmptyString) {
    scene_info_ = new ::std::string;
  }
  scene_info_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SStageInfo::mutable_scene_info() {
  set_has_scene_info();
  if (scene_info_ == &::google::protobuf::internal::kEmptyString) {
    scene_info_ = new ::std::string;
  }
  return scene_info_;
}
inline ::std::string* SStageInfo::release_scene_info() {
  clear_has_scene_info();
  if (scene_info_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = scene_info_;
    scene_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// SItemModAttr

// required int32 mod = 1;
inline bool SItemModAttr::has_mod() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SItemModAttr::set_has_mod() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SItemModAttr::clear_has_mod() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SItemModAttr::clear_mod() {
  mod_ = 0;
  clear_has_mod();
}
inline ::google::protobuf::int32 SItemModAttr::mod() const {
  return mod_;
}
inline void SItemModAttr::set_mod(::google::protobuf::int32 value) {
  set_has_mod();
  mod_ = value;
}

// required int32 type = 2;
inline bool SItemModAttr::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SItemModAttr::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SItemModAttr::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SItemModAttr::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SItemModAttr::type() const {
  return type_;
}
inline void SItemModAttr::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required float value = 3;
inline bool SItemModAttr::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SItemModAttr::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SItemModAttr::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SItemModAttr::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline float SItemModAttr::value() const {
  return value_;
}
inline void SItemModAttr::set_value(float value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// SItemModTrig

// required int32 mod = 1;
inline bool SItemModTrig::has_mod() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SItemModTrig::set_has_mod() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SItemModTrig::clear_has_mod() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SItemModTrig::clear_mod() {
  mod_ = 0;
  clear_has_mod();
}
inline ::google::protobuf::int32 SItemModTrig::mod() const {
  return mod_;
}
inline void SItemModTrig::set_mod(::google::protobuf::int32 value) {
  set_has_mod();
  mod_ = value;
}

// repeated float params = 2;
inline int SItemModTrig::params_size() const {
  return params_.size();
}
inline void SItemModTrig::clear_params() {
  params_.Clear();
}
inline float SItemModTrig::params(int index) const {
  return params_.Get(index);
}
inline void SItemModTrig::set_params(int index, float value) {
  params_.Set(index, value);
}
inline void SItemModTrig::add_params(float value) {
  params_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
SItemModTrig::params() const {
  return params_;
}
inline ::google::protobuf::RepeatedField< float >*
SItemModTrig::mutable_params() {
  return &params_;
}

// -------------------------------------------------------------------

// SCombatPoint

// required float zs_point = 1;
inline bool SCombatPoint::has_zs_point() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SCombatPoint::set_has_zs_point() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SCombatPoint::clear_has_zs_point() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SCombatPoint::clear_zs_point() {
  zs_point_ = 0;
  clear_has_zs_point();
}
inline float SCombatPoint::zs_point() const {
  return zs_point_;
}
inline void SCombatPoint::set_zs_point(float value) {
  set_has_zs_point();
  zs_point_ = value;
}

// required float gs_point = 2;
inline bool SCombatPoint::has_gs_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SCombatPoint::set_has_gs_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SCombatPoint::clear_has_gs_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SCombatPoint::clear_gs_point() {
  gs_point_ = 0;
  clear_has_gs_point();
}
inline float SCombatPoint::gs_point() const {
  return gs_point_;
}
inline void SCombatPoint::set_gs_point(float value) {
  set_has_gs_point();
  gs_point_ = value;
}

// required float fs_point = 3;
inline bool SCombatPoint::has_fs_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SCombatPoint::set_has_fs_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SCombatPoint::clear_has_fs_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SCombatPoint::clear_fs_point() {
  fs_point_ = 0;
  clear_has_fs_point();
}
inline float SCombatPoint::fs_point() const {
  return fs_point_;
}
inline void SCombatPoint::set_fs_point(float value) {
  set_has_fs_point();
  fs_point_ = value;
}

// -------------------------------------------------------------------

// SItemFashionParts

// required int32 idx = 1;
inline bool SItemFashionParts::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SItemFashionParts::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SItemFashionParts::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SItemFashionParts::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
inline ::google::protobuf::int32 SItemFashionParts::idx() const {
  return idx_;
}
inline void SItemFashionParts::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
}

// required int32 enhance_lv = 2;
inline bool SItemFashionParts::has_enhance_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SItemFashionParts::set_has_enhance_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SItemFashionParts::clear_has_enhance_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SItemFashionParts::clear_enhance_lv() {
  enhance_lv_ = 0;
  clear_has_enhance_lv();
}
inline ::google::protobuf::int32 SItemFashionParts::enhance_lv() const {
  return enhance_lv_;
}
inline void SItemFashionParts::set_enhance_lv(::google::protobuf::int32 value) {
  set_has_enhance_lv();
  enhance_lv_ = value;
}

// -------------------------------------------------------------------

// SItemWing

// required int32 exp = 1;
inline bool SItemWing::has_exp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SItemWing::set_has_exp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SItemWing::clear_has_exp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SItemWing::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 SItemWing::exp() const {
  return exp_;
}
inline void SItemWing::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// required int32 star = 2;
inline bool SItemWing::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SItemWing::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SItemWing::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SItemWing::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 SItemWing::star() const {
  return star_;
}
inline void SItemWing::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// required int32 level = 3;
inline bool SItemWing::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SItemWing::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SItemWing::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SItemWing::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SItemWing::level() const {
  return level_;
}
inline void SItemWing::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required int32 step = 4;
inline bool SItemWing::has_step() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SItemWing::set_has_step() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SItemWing::clear_has_step() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SItemWing::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 SItemWing::step() const {
  return step_;
}
inline void SItemWing::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
}

// required int32 equip_step = 5;
inline bool SItemWing::has_equip_step() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SItemWing::set_has_equip_step() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SItemWing::clear_has_equip_step() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SItemWing::clear_equip_step() {
  equip_step_ = 0;
  clear_has_equip_step();
}
inline ::google::protobuf::int32 SItemWing::equip_step() const {
  return equip_step_;
}
inline void SItemWing::set_equip_step(::google::protobuf::int32 value) {
  set_has_equip_step();
  equip_step_ = value;
}

// required int32 luck = 6;
inline bool SItemWing::has_luck() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SItemWing::set_has_luck() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SItemWing::clear_has_luck() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SItemWing::clear_luck() {
  luck_ = 0;
  clear_has_luck();
}
inline ::google::protobuf::int32 SItemWing::luck() const {
  return luck_;
}
inline void SItemWing::set_luck(::google::protobuf::int32 value) {
  set_has_luck();
  luck_ = value;
}

// -------------------------------------------------------------------

// SItemEquip

// required int32 color = 1;
inline bool SItemEquip::has_color() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SItemEquip::set_has_color() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SItemEquip::clear_has_color() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SItemEquip::clear_color() {
  color_ = 0;
  clear_has_color();
}
inline ::google::protobuf::int32 SItemEquip::color() const {
  return color_;
}
inline void SItemEquip::set_color(::google::protobuf::int32 value) {
  set_has_color();
  color_ = value;
}

// required int32 level = 2;
inline bool SItemEquip::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SItemEquip::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SItemEquip::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SItemEquip::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SItemEquip::level() const {
  return level_;
}
inline void SItemEquip::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required int32 use_level = 3;
inline bool SItemEquip::has_use_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SItemEquip::set_has_use_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SItemEquip::clear_has_use_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SItemEquip::clear_use_level() {
  use_level_ = 0;
  clear_has_use_level();
}
inline ::google::protobuf::int32 SItemEquip::use_level() const {
  return use_level_;
}
inline void SItemEquip::set_use_level(::google::protobuf::int32 value) {
  set_has_use_level();
  use_level_ = value;
}

// optional int32 star_level = 4;
inline bool SItemEquip::has_star_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SItemEquip::set_has_star_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SItemEquip::clear_has_star_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SItemEquip::clear_star_level() {
  star_level_ = 0;
  clear_has_star_level();
}
inline ::google::protobuf::int32 SItemEquip::star_level() const {
  return star_level_;
}
inline void SItemEquip::set_star_level(::google::protobuf::int32 value) {
  set_has_star_level();
  star_level_ = value;
}

// optional int32 enchant_level = 5;
inline bool SItemEquip::has_enchant_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SItemEquip::set_has_enchant_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SItemEquip::clear_has_enchant_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SItemEquip::clear_enchant_level() {
  enchant_level_ = 0;
  clear_has_enchant_level();
}
inline ::google::protobuf::int32 SItemEquip::enchant_level() const {
  return enchant_level_;
}
inline void SItemEquip::set_enchant_level(::google::protobuf::int32 value) {
  set_has_enchant_level();
  enchant_level_ = value;
}

// repeated .pwngs.protocol.worldsrv.SItemModAttr basics_attr = 6;
inline int SItemEquip::basics_attr_size() const {
  return basics_attr_.size();
}
inline void SItemEquip::clear_basics_attr() {
  basics_attr_.Clear();
}
inline const ::pwngs::protocol::worldsrv::SItemModAttr& SItemEquip::basics_attr(int index) const {
  return basics_attr_.Get(index);
}
inline ::pwngs::protocol::worldsrv::SItemModAttr* SItemEquip::mutable_basics_attr(int index) {
  return basics_attr_.Mutable(index);
}
inline ::pwngs::protocol::worldsrv::SItemModAttr* SItemEquip::add_basics_attr() {
  return basics_attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr >&
SItemEquip::basics_attr() const {
  return basics_attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr >*
SItemEquip::mutable_basics_attr() {
  return &basics_attr_;
}

// repeated .pwngs.protocol.worldsrv.SItemModAttr extends_attr = 7;
inline int SItemEquip::extends_attr_size() const {
  return extends_attr_.size();
}
inline void SItemEquip::clear_extends_attr() {
  extends_attr_.Clear();
}
inline const ::pwngs::protocol::worldsrv::SItemModAttr& SItemEquip::extends_attr(int index) const {
  return extends_attr_.Get(index);
}
inline ::pwngs::protocol::worldsrv::SItemModAttr* SItemEquip::mutable_extends_attr(int index) {
  return extends_attr_.Mutable(index);
}
inline ::pwngs::protocol::worldsrv::SItemModAttr* SItemEquip::add_extends_attr() {
  return extends_attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr >&
SItemEquip::extends_attr() const {
  return extends_attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr >*
SItemEquip::mutable_extends_attr() {
  return &extends_attr_;
}

// optional .pwngs.protocol.worldsrv.SItemModAttr special_attr = 8;
inline bool SItemEquip::has_special_attr() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SItemEquip::set_has_special_attr() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SItemEquip::clear_has_special_attr() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SItemEquip::clear_special_attr() {
  if (special_attr_ != NULL) special_attr_->::pwngs::protocol::worldsrv::SItemModAttr::Clear();
  clear_has_special_attr();
}
inline const ::pwngs::protocol::worldsrv::SItemModAttr& SItemEquip::special_attr() const {
  return special_attr_ != NULL ? *special_attr_ : *default_instance_->special_attr_;
}
inline ::pwngs::protocol::worldsrv::SItemModAttr* SItemEquip::mutable_special_attr() {
  set_has_special_attr();
  if (special_attr_ == NULL) special_attr_ = new ::pwngs::protocol::worldsrv::SItemModAttr;
  return special_attr_;
}
inline ::pwngs::protocol::worldsrv::SItemModAttr* SItemEquip::release_special_attr() {
  clear_has_special_attr();
  ::pwngs::protocol::worldsrv::SItemModAttr* temp = special_attr_;
  special_attr_ = NULL;
  return temp;
}

// optional .pwngs.protocol.worldsrv.SItemModTrig special_trig = 9;
inline bool SItemEquip::has_special_trig() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SItemEquip::set_has_special_trig() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SItemEquip::clear_has_special_trig() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SItemEquip::clear_special_trig() {
  if (special_trig_ != NULL) special_trig_->::pwngs::protocol::worldsrv::SItemModTrig::Clear();
  clear_has_special_trig();
}
inline const ::pwngs::protocol::worldsrv::SItemModTrig& SItemEquip::special_trig() const {
  return special_trig_ != NULL ? *special_trig_ : *default_instance_->special_trig_;
}
inline ::pwngs::protocol::worldsrv::SItemModTrig* SItemEquip::mutable_special_trig() {
  set_has_special_trig();
  if (special_trig_ == NULL) special_trig_ = new ::pwngs::protocol::worldsrv::SItemModTrig;
  return special_trig_;
}
inline ::pwngs::protocol::worldsrv::SItemModTrig* SItemEquip::release_special_trig() {
  clear_has_special_trig();
  ::pwngs::protocol::worldsrv::SItemModTrig* temp = special_trig_;
  special_trig_ = NULL;
  return temp;
}

// repeated .pwngs.protocol.worldsrv.SItemFashionParts fashion_parts = 10;
inline int SItemEquip::fashion_parts_size() const {
  return fashion_parts_.size();
}
inline void SItemEquip::clear_fashion_parts() {
  fashion_parts_.Clear();
}
inline const ::pwngs::protocol::worldsrv::SItemFashionParts& SItemEquip::fashion_parts(int index) const {
  return fashion_parts_.Get(index);
}
inline ::pwngs::protocol::worldsrv::SItemFashionParts* SItemEquip::mutable_fashion_parts(int index) {
  return fashion_parts_.Mutable(index);
}
inline ::pwngs::protocol::worldsrv::SItemFashionParts* SItemEquip::add_fashion_parts() {
  return fashion_parts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemFashionParts >&
SItemEquip::fashion_parts() const {
  return fashion_parts_;
}
inline ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemFashionParts >*
SItemEquip::mutable_fashion_parts() {
  return &fashion_parts_;
}

// optional .pwngs.protocol.worldsrv.SItemWing wing = 11;
inline bool SItemEquip::has_wing() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SItemEquip::set_has_wing() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SItemEquip::clear_has_wing() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SItemEquip::clear_wing() {
  if (wing_ != NULL) wing_->::pwngs::protocol::worldsrv::SItemWing::Clear();
  clear_has_wing();
}
inline const ::pwngs::protocol::worldsrv::SItemWing& SItemEquip::wing() const {
  return wing_ != NULL ? *wing_ : *default_instance_->wing_;
}
inline ::pwngs::protocol::worldsrv::SItemWing* SItemEquip::mutable_wing() {
  set_has_wing();
  if (wing_ == NULL) wing_ = new ::pwngs::protocol::worldsrv::SItemWing;
  return wing_;
}
inline ::pwngs::protocol::worldsrv::SItemWing* SItemEquip::release_wing() {
  clear_has_wing();
  ::pwngs::protocol::worldsrv::SItemWing* temp = wing_;
  wing_ = NULL;
  return temp;
}

// optional int32 skill_id = 12;
inline bool SItemEquip::has_skill_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SItemEquip::set_has_skill_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SItemEquip::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SItemEquip::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 SItemEquip::skill_id() const {
  return skill_id_;
}
inline void SItemEquip::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// -------------------------------------------------------------------

// SItemRune

// required int32 exp = 1;
inline bool SItemRune::has_exp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SItemRune::set_has_exp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SItemRune::clear_has_exp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SItemRune::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 SItemRune::exp() const {
  return exp_;
}
inline void SItemRune::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// -------------------------------------------------------------------

// SItemBless

// repeated .pwngs.protocol.worldsrv.SItemModAttr mod_attrs = 1;
inline int SItemBless::mod_attrs_size() const {
  return mod_attrs_.size();
}
inline void SItemBless::clear_mod_attrs() {
  mod_attrs_.Clear();
}
inline const ::pwngs::protocol::worldsrv::SItemModAttr& SItemBless::mod_attrs(int index) const {
  return mod_attrs_.Get(index);
}
inline ::pwngs::protocol::worldsrv::SItemModAttr* SItemBless::mutable_mod_attrs(int index) {
  return mod_attrs_.Mutable(index);
}
inline ::pwngs::protocol::worldsrv::SItemModAttr* SItemBless::add_mod_attrs() {
  return mod_attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr >&
SItemBless::mod_attrs() const {
  return mod_attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr >*
SItemBless::mutable_mod_attrs() {
  return &mod_attrs_;
}

// -------------------------------------------------------------------

// SItemEgg

// required float aptitude = 1;
inline bool SItemEgg::has_aptitude() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SItemEgg::set_has_aptitude() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SItemEgg::clear_has_aptitude() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SItemEgg::clear_aptitude() {
  aptitude_ = 0;
  clear_has_aptitude();
}
inline float SItemEgg::aptitude() const {
  return aptitude_;
}
inline void SItemEgg::set_aptitude(float value) {
  set_has_aptitude();
  aptitude_ = value;
}

// required float fire_dmg = 2;
inline bool SItemEgg::has_fire_dmg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SItemEgg::set_has_fire_dmg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SItemEgg::clear_has_fire_dmg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SItemEgg::clear_fire_dmg() {
  fire_dmg_ = 0;
  clear_has_fire_dmg();
}
inline float SItemEgg::fire_dmg() const {
  return fire_dmg_;
}
inline void SItemEgg::set_fire_dmg(float value) {
  set_has_fire_dmg();
  fire_dmg_ = value;
}

// required float cold_dmg = 3;
inline bool SItemEgg::has_cold_dmg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SItemEgg::set_has_cold_dmg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SItemEgg::clear_has_cold_dmg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SItemEgg::clear_cold_dmg() {
  cold_dmg_ = 0;
  clear_has_cold_dmg();
}
inline float SItemEgg::cold_dmg() const {
  return cold_dmg_;
}
inline void SItemEgg::set_cold_dmg(float value) {
  set_has_cold_dmg();
  cold_dmg_ = value;
}

// required float light_dmg = 4;
inline bool SItemEgg::has_light_dmg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SItemEgg::set_has_light_dmg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SItemEgg::clear_has_light_dmg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SItemEgg::clear_light_dmg() {
  light_dmg_ = 0;
  clear_has_light_dmg();
}
inline float SItemEgg::light_dmg() const {
  return light_dmg_;
}
inline void SItemEgg::set_light_dmg(float value) {
  set_has_light_dmg();
  light_dmg_ = value;
}

// required float poison_dmg = 5;
inline bool SItemEgg::has_poison_dmg() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SItemEgg::set_has_poison_dmg() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SItemEgg::clear_has_poison_dmg() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SItemEgg::clear_poison_dmg() {
  poison_dmg_ = 0;
  clear_has_poison_dmg();
}
inline float SItemEgg::poison_dmg() const {
  return poison_dmg_;
}
inline void SItemEgg::set_poison_dmg(float value) {
  set_has_poison_dmg();
  poison_dmg_ = value;
}

// required float fire_res = 6;
inline bool SItemEgg::has_fire_res() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SItemEgg::set_has_fire_res() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SItemEgg::clear_has_fire_res() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SItemEgg::clear_fire_res() {
  fire_res_ = 0;
  clear_has_fire_res();
}
inline float SItemEgg::fire_res() const {
  return fire_res_;
}
inline void SItemEgg::set_fire_res(float value) {
  set_has_fire_res();
  fire_res_ = value;
}

// required float cold_res = 7;
inline bool SItemEgg::has_cold_res() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SItemEgg::set_has_cold_res() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SItemEgg::clear_has_cold_res() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SItemEgg::clear_cold_res() {
  cold_res_ = 0;
  clear_has_cold_res();
}
inline float SItemEgg::cold_res() const {
  return cold_res_;
}
inline void SItemEgg::set_cold_res(float value) {
  set_has_cold_res();
  cold_res_ = value;
}

// required float light_res = 8;
inline bool SItemEgg::has_light_res() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SItemEgg::set_has_light_res() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SItemEgg::clear_has_light_res() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SItemEgg::clear_light_res() {
  light_res_ = 0;
  clear_has_light_res();
}
inline float SItemEgg::light_res() const {
  return light_res_;
}
inline void SItemEgg::set_light_res(float value) {
  set_has_light_res();
  light_res_ = value;
}

// required float poison_res = 9;
inline bool SItemEgg::has_poison_res() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SItemEgg::set_has_poison_res() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SItemEgg::clear_has_poison_res() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SItemEgg::clear_poison_res() {
  poison_res_ = 0;
  clear_has_poison_res();
}
inline float SItemEgg::poison_res() const {
  return poison_res_;
}
inline void SItemEgg::set_poison_res(float value) {
  set_has_poison_res();
  poison_res_ = value;
}

// required float grow_rate = 10;
inline bool SItemEgg::has_grow_rate() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SItemEgg::set_has_grow_rate() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SItemEgg::clear_has_grow_rate() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SItemEgg::clear_grow_rate() {
  grow_rate_ = 0;
  clear_has_grow_rate();
}
inline float SItemEgg::grow_rate() const {
  return grow_rate_;
}
inline void SItemEgg::set_grow_rate(float value) {
  set_has_grow_rate();
  grow_rate_ = value;
}

// required float grow_rate_limit = 11;
inline bool SItemEgg::has_grow_rate_limit() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SItemEgg::set_has_grow_rate_limit() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SItemEgg::clear_has_grow_rate_limit() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SItemEgg::clear_grow_rate_limit() {
  grow_rate_limit_ = 0;
  clear_has_grow_rate_limit();
}
inline float SItemEgg::grow_rate_limit() const {
  return grow_rate_limit_;
}
inline void SItemEgg::set_grow_rate_limit(float value) {
  set_has_grow_rate_limit();
  grow_rate_limit_ = value;
}

// required float con_rate = 12;
inline bool SItemEgg::has_con_rate() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SItemEgg::set_has_con_rate() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SItemEgg::clear_has_con_rate() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SItemEgg::clear_con_rate() {
  con_rate_ = 0;
  clear_has_con_rate();
}
inline float SItemEgg::con_rate() const {
  return con_rate_;
}
inline void SItemEgg::set_con_rate(float value) {
  set_has_con_rate();
  con_rate_ = value;
}

// required float con_rate_limit = 13;
inline bool SItemEgg::has_con_rate_limit() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SItemEgg::set_has_con_rate_limit() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SItemEgg::clear_has_con_rate_limit() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SItemEgg::clear_con_rate_limit() {
  con_rate_limit_ = 0;
  clear_has_con_rate_limit();
}
inline float SItemEgg::con_rate_limit() const {
  return con_rate_limit_;
}
inline void SItemEgg::set_con_rate_limit(float value) {
  set_has_con_rate_limit();
  con_rate_limit_ = value;
}

// -------------------------------------------------------------------

// SItemEquipRune

// repeated .pwngs.protocol.worldsrv.SItemModAttr mod_attrs = 1;
inline int SItemEquipRune::mod_attrs_size() const {
  return mod_attrs_.size();
}
inline void SItemEquipRune::clear_mod_attrs() {
  mod_attrs_.Clear();
}
inline const ::pwngs::protocol::worldsrv::SItemModAttr& SItemEquipRune::mod_attrs(int index) const {
  return mod_attrs_.Get(index);
}
inline ::pwngs::protocol::worldsrv::SItemModAttr* SItemEquipRune::mutable_mod_attrs(int index) {
  return mod_attrs_.Mutable(index);
}
inline ::pwngs::protocol::worldsrv::SItemModAttr* SItemEquipRune::add_mod_attrs() {
  return mod_attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr >&
SItemEquipRune::mod_attrs() const {
  return mod_attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItemModAttr >*
SItemEquipRune::mutable_mod_attrs() {
  return &mod_attrs_;
}

// -------------------------------------------------------------------

// SItemBloodGobm

// required int32 level = 1;
inline bool SItemBloodGobm::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SItemBloodGobm::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SItemBloodGobm::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SItemBloodGobm::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SItemBloodGobm::level() const {
  return level_;
}
inline void SItemBloodGobm::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required int32 exp = 2;
inline bool SItemBloodGobm::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SItemBloodGobm::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SItemBloodGobm::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SItemBloodGobm::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 SItemBloodGobm::exp() const {
  return exp_;
}
inline void SItemBloodGobm::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// required int32 active_type = 3;
inline bool SItemBloodGobm::has_active_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SItemBloodGobm::set_has_active_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SItemBloodGobm::clear_has_active_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SItemBloodGobm::clear_active_type() {
  active_type_ = 0;
  clear_has_active_type();
}
inline ::google::protobuf::int32 SItemBloodGobm::active_type() const {
  return active_type_;
}
inline void SItemBloodGobm::set_active_type(::google::protobuf::int32 value) {
  set_has_active_type();
  active_type_ = value;
}

// required int32 active_param1 = 4;
inline bool SItemBloodGobm::has_active_param1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SItemBloodGobm::set_has_active_param1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SItemBloodGobm::clear_has_active_param1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SItemBloodGobm::clear_active_param1() {
  active_param1_ = 0;
  clear_has_active_param1();
}
inline ::google::protobuf::int32 SItemBloodGobm::active_param1() const {
  return active_param1_;
}
inline void SItemBloodGobm::set_active_param1(::google::protobuf::int32 value) {
  set_has_active_param1();
  active_param1_ = value;
}

// required int32 active_param2 = 5;
inline bool SItemBloodGobm::has_active_param2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SItemBloodGobm::set_has_active_param2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SItemBloodGobm::clear_has_active_param2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SItemBloodGobm::clear_active_param2() {
  active_param2_ = 0;
  clear_has_active_param2();
}
inline ::google::protobuf::int32 SItemBloodGobm::active_param2() const {
  return active_param2_;
}
inline void SItemBloodGobm::set_active_param2(::google::protobuf::int32 value) {
  set_has_active_param2();
  active_param2_ = value;
}

// -------------------------------------------------------------------

// SEquipIndexGem

// required int32 equip_index = 1;
inline bool SEquipIndexGem::has_equip_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SEquipIndexGem::set_has_equip_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SEquipIndexGem::clear_has_equip_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SEquipIndexGem::clear_equip_index() {
  equip_index_ = 0;
  clear_has_equip_index();
}
inline ::google::protobuf::int32 SEquipIndexGem::equip_index() const {
  return equip_index_;
}
inline void SEquipIndexGem::set_equip_index(::google::protobuf::int32 value) {
  set_has_equip_index();
  equip_index_ = value;
}

// repeated .pwngs.protocol.worldsrv.SItem gems = 2;
inline int SEquipIndexGem::gems_size() const {
  return gems_.size();
}
inline void SEquipIndexGem::clear_gems() {
  gems_.Clear();
}
inline const ::pwngs::protocol::worldsrv::SItem& SEquipIndexGem::gems(int index) const {
  return gems_.Get(index);
}
inline ::pwngs::protocol::worldsrv::SItem* SEquipIndexGem::mutable_gems(int index) {
  return gems_.Mutable(index);
}
inline ::pwngs::protocol::worldsrv::SItem* SEquipIndexGem::add_gems() {
  return gems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItem >&
SEquipIndexGem::gems() const {
  return gems_;
}
inline ::google::protobuf::RepeatedPtrField< ::pwngs::protocol::worldsrv::SItem >*
SEquipIndexGem::mutable_gems() {
  return &gems_;
}

// -------------------------------------------------------------------

// SItemHPMP

// required int32 used_val = 1;
inline bool SItemHPMP::has_used_val() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SItemHPMP::set_has_used_val() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SItemHPMP::clear_has_used_val() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SItemHPMP::clear_used_val() {
  used_val_ = 0;
  clear_has_used_val();
}
inline ::google::protobuf::int32 SItemHPMP::used_val() const {
  return used_val_;
}
inline void SItemHPMP::set_used_val(::google::protobuf::int32 value) {
  set_has_used_val();
  used_val_ = value;
}

// required int32 total_val = 2;
inline bool SItemHPMP::has_total_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SItemHPMP::set_has_total_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SItemHPMP::clear_has_total_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SItemHPMP::clear_total_val() {
  total_val_ = 0;
  clear_has_total_val();
}
inline ::google::protobuf::int32 SItemHPMP::total_val() const {
  return total_val_;
}
inline void SItemHPMP::set_total_val(::google::protobuf::int32 value) {
  set_has_total_val();
  total_val_ = value;
}

// -------------------------------------------------------------------

// SItem

// required int64 item_id = 1;
inline bool SItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SItem::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 SItem::item_id() const {
  return item_id_;
}
inline void SItem::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
}

// required int32 item_type = 2;
inline bool SItem::has_item_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SItem::set_has_item_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SItem::clear_has_item_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SItem::clear_item_type() {
  item_type_ = 0;
  clear_has_item_type();
}
inline ::google::protobuf::int32 SItem::item_type() const {
  return item_type_;
}
inline void SItem::set_item_type(::google::protobuf::int32 value) {
  set_has_item_type();
  item_type_ = value;
}

// required int32 item_count = 3;
inline bool SItem::has_item_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SItem::set_has_item_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SItem::clear_has_item_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SItem::clear_item_count() {
  item_count_ = 0;
  clear_has_item_count();
}
inline ::google::protobuf::int32 SItem::item_count() const {
  return item_count_;
}
inline void SItem::set_item_count(::google::protobuf::int32 value) {
  set_has_item_count();
  item_count_ = value;
}

// required int32 item_bag = 4;
inline bool SItem::has_item_bag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SItem::set_has_item_bag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SItem::clear_has_item_bag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SItem::clear_item_bag() {
  item_bag_ = 0;
  clear_has_item_bag();
}
inline ::google::protobuf::int32 SItem::item_bag() const {
  return item_bag_;
}
inline void SItem::set_item_bag(::google::protobuf::int32 value) {
  set_has_item_bag();
  item_bag_ = value;
}

// required int32 item_position = 5;
inline bool SItem::has_item_position() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SItem::set_has_item_position() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SItem::clear_has_item_position() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SItem::clear_item_position() {
  item_position_ = 0;
  clear_has_item_position();
}
inline ::google::protobuf::int32 SItem::item_position() const {
  return item_position_;
}
inline void SItem::set_item_position(::google::protobuf::int32 value) {
  set_has_item_position();
  item_position_ = value;
}

// required int64 item_flags = 6;
inline bool SItem::has_item_flags() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SItem::set_has_item_flags() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SItem::clear_has_item_flags() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SItem::clear_item_flags() {
  item_flags_ = GOOGLE_LONGLONG(0);
  clear_has_item_flags();
}
inline ::google::protobuf::int64 SItem::item_flags() const {
  return item_flags_;
}
inline void SItem::set_item_flags(::google::protobuf::int64 value) {
  set_has_item_flags();
  item_flags_ = value;
}

// required int64 expired_time = 7;
inline bool SItem::has_expired_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SItem::set_has_expired_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SItem::clear_has_expired_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SItem::clear_expired_time() {
  expired_time_ = GOOGLE_LONGLONG(0);
  clear_has_expired_time();
}
inline ::google::protobuf::int64 SItem::expired_time() const {
  return expired_time_;
}
inline void SItem::set_expired_time(::google::protobuf::int64 value) {
  set_has_expired_time();
  expired_time_ = value;
}

// optional int64 item_price = 8;
inline bool SItem::has_item_price() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SItem::set_has_item_price() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SItem::clear_has_item_price() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SItem::clear_item_price() {
  item_price_ = GOOGLE_LONGLONG(0);
  clear_has_item_price();
}
inline ::google::protobuf::int64 SItem::item_price() const {
  return item_price_;
}
inline void SItem::set_item_price(::google::protobuf::int64 value) {
  set_has_item_price();
  item_price_ = value;
}

// optional .pwngs.protocol.worldsrv.SItemEquip equip_attrs = 9;
inline bool SItem::has_equip_attrs() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SItem::set_has_equip_attrs() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SItem::clear_has_equip_attrs() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SItem::clear_equip_attrs() {
  if (equip_attrs_ != NULL) equip_attrs_->::pwngs::protocol::worldsrv::SItemEquip::Clear();
  clear_has_equip_attrs();
}
inline const ::pwngs::protocol::worldsrv::SItemEquip& SItem::equip_attrs() const {
  return equip_attrs_ != NULL ? *equip_attrs_ : *default_instance_->equip_attrs_;
}
inline ::pwngs::protocol::worldsrv::SItemEquip* SItem::mutable_equip_attrs() {
  set_has_equip_attrs();
  if (equip_attrs_ == NULL) equip_attrs_ = new ::pwngs::protocol::worldsrv::SItemEquip;
  return equip_attrs_;
}
inline ::pwngs::protocol::worldsrv::SItemEquip* SItem::release_equip_attrs() {
  clear_has_equip_attrs();
  ::pwngs::protocol::worldsrv::SItemEquip* temp = equip_attrs_;
  equip_attrs_ = NULL;
  return temp;
}

// optional .pwngs.protocol.worldsrv.SItemBless bless_attrs = 10;
inline bool SItem::has_bless_attrs() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SItem::set_has_bless_attrs() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SItem::clear_has_bless_attrs() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SItem::clear_bless_attrs() {
  if (bless_attrs_ != NULL) bless_attrs_->::pwngs::protocol::worldsrv::SItemBless::Clear();
  clear_has_bless_attrs();
}
inline const ::pwngs::protocol::worldsrv::SItemBless& SItem::bless_attrs() const {
  return bless_attrs_ != NULL ? *bless_attrs_ : *default_instance_->bless_attrs_;
}
inline ::pwngs::protocol::worldsrv::SItemBless* SItem::mutable_bless_attrs() {
  set_has_bless_attrs();
  if (bless_attrs_ == NULL) bless_attrs_ = new ::pwngs::protocol::worldsrv::SItemBless;
  return bless_attrs_;
}
inline ::pwngs::protocol::worldsrv::SItemBless* SItem::release_bless_attrs() {
  clear_has_bless_attrs();
  ::pwngs::protocol::worldsrv::SItemBless* temp = bless_attrs_;
  bless_attrs_ = NULL;
  return temp;
}

// optional .pwngs.protocol.worldsrv.SItemEgg egg_attrs = 11;
inline bool SItem::has_egg_attrs() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SItem::set_has_egg_attrs() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SItem::clear_has_egg_attrs() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SItem::clear_egg_attrs() {
  if (egg_attrs_ != NULL) egg_attrs_->::pwngs::protocol::worldsrv::SItemEgg::Clear();
  clear_has_egg_attrs();
}
inline const ::pwngs::protocol::worldsrv::SItemEgg& SItem::egg_attrs() const {
  return egg_attrs_ != NULL ? *egg_attrs_ : *default_instance_->egg_attrs_;
}
inline ::pwngs::protocol::worldsrv::SItemEgg* SItem::mutable_egg_attrs() {
  set_has_egg_attrs();
  if (egg_attrs_ == NULL) egg_attrs_ = new ::pwngs::protocol::worldsrv::SItemEgg;
  return egg_attrs_;
}
inline ::pwngs::protocol::worldsrv::SItemEgg* SItem::release_egg_attrs() {
  clear_has_egg_attrs();
  ::pwngs::protocol::worldsrv::SItemEgg* temp = egg_attrs_;
  egg_attrs_ = NULL;
  return temp;
}

// optional .pwngs.protocol.worldsrv.SItemBloodGobm gobm_attrs = 12;
inline bool SItem::has_gobm_attrs() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SItem::set_has_gobm_attrs() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SItem::clear_has_gobm_attrs() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SItem::clear_gobm_attrs() {
  if (gobm_attrs_ != NULL) gobm_attrs_->::pwngs::protocol::worldsrv::SItemBloodGobm::Clear();
  clear_has_gobm_attrs();
}
inline const ::pwngs::protocol::worldsrv::SItemBloodGobm& SItem::gobm_attrs() const {
  return gobm_attrs_ != NULL ? *gobm_attrs_ : *default_instance_->gobm_attrs_;
}
inline ::pwngs::protocol::worldsrv::SItemBloodGobm* SItem::mutable_gobm_attrs() {
  set_has_gobm_attrs();
  if (gobm_attrs_ == NULL) gobm_attrs_ = new ::pwngs::protocol::worldsrv::SItemBloodGobm;
  return gobm_attrs_;
}
inline ::pwngs::protocol::worldsrv::SItemBloodGobm* SItem::release_gobm_attrs() {
  clear_has_gobm_attrs();
  ::pwngs::protocol::worldsrv::SItemBloodGobm* temp = gobm_attrs_;
  gobm_attrs_ = NULL;
  return temp;
}

// optional .pwngs.protocol.worldsrv.SCombatPoint combat_point = 13;
inline bool SItem::has_combat_point() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SItem::set_has_combat_point() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SItem::clear_has_combat_point() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SItem::clear_combat_point() {
  if (combat_point_ != NULL) combat_point_->::pwngs::protocol::worldsrv::SCombatPoint::Clear();
  clear_has_combat_point();
}
inline const ::pwngs::protocol::worldsrv::SCombatPoint& SItem::combat_point() const {
  return combat_point_ != NULL ? *combat_point_ : *default_instance_->combat_point_;
}
inline ::pwngs::protocol::worldsrv::SCombatPoint* SItem::mutable_combat_point() {
  set_has_combat_point();
  if (combat_point_ == NULL) combat_point_ = new ::pwngs::protocol::worldsrv::SCombatPoint;
  return combat_point_;
}
inline ::pwngs::protocol::worldsrv::SCombatPoint* SItem::release_combat_point() {
  clear_has_combat_point();
  ::pwngs::protocol::worldsrv::SCombatPoint* temp = combat_point_;
  combat_point_ = NULL;
  return temp;
}

// optional .pwngs.protocol.worldsrv.SItemHPMP hpmp_attrs = 14;
inline bool SItem::has_hpmp_attrs() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SItem::set_has_hpmp_attrs() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SItem::clear_has_hpmp_attrs() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SItem::clear_hpmp_attrs() {
  if (hpmp_attrs_ != NULL) hpmp_attrs_->::pwngs::protocol::worldsrv::SItemHPMP::Clear();
  clear_has_hpmp_attrs();
}
inline const ::pwngs::protocol::worldsrv::SItemHPMP& SItem::hpmp_attrs() const {
  return hpmp_attrs_ != NULL ? *hpmp_attrs_ : *default_instance_->hpmp_attrs_;
}
inline ::pwngs::protocol::worldsrv::SItemHPMP* SItem::mutable_hpmp_attrs() {
  set_has_hpmp_attrs();
  if (hpmp_attrs_ == NULL) hpmp_attrs_ = new ::pwngs::protocol::worldsrv::SItemHPMP;
  return hpmp_attrs_;
}
inline ::pwngs::protocol::worldsrv::SItemHPMP* SItem::release_hpmp_attrs() {
  clear_has_hpmp_attrs();
  ::pwngs::protocol::worldsrv::SItemHPMP* temp = hpmp_attrs_;
  hpmp_attrs_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// SItemPrice

// required int32 tid = 1;
inline bool SItemPrice::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SItemPrice::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SItemPrice::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SItemPrice::clear_tid() {
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 SItemPrice::tid() const {
  return tid_;
}
inline void SItemPrice::set_tid(::google::protobuf::int32 value) {
  set_has_tid();
  tid_ = value;
}

// required int32 price = 2;
inline bool SItemPrice::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SItemPrice::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SItemPrice::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SItemPrice::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 SItemPrice::price() const {
  return price_;
}
inline void SItemPrice::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
}

// -------------------------------------------------------------------

// SPackItem

// required int32 tid = 1;
inline bool SPackItem::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SPackItem::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SPackItem::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SPackItem::clear_tid() {
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 SPackItem::tid() const {
  return tid_;
}
inline void SPackItem::set_tid(::google::protobuf::int32 value) {
  set_has_tid();
  tid_ = value;
}

// required int32 count = 2;
inline bool SPackItem::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SPackItem::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SPackItem::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SPackItem::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 SPackItem::count() const {
  return count_;
}
inline void SPackItem::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// SRandomItem

// required int32 random_item_type = 1;
inline bool SRandomItem::has_random_item_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SRandomItem::set_has_random_item_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SRandomItem::clear_has_random_item_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SRandomItem::clear_random_item_type() {
  random_item_type_ = 0;
  clear_has_random_item_type();
}
inline ::google::protobuf::int32 SRandomItem::random_item_type() const {
  return random_item_type_;
}
inline void SRandomItem::set_random_item_type(::google::protobuf::int32 value) {
  set_has_random_item_type();
  random_item_type_ = value;
}

// required .pwngs.protocol.worldsrv.SPackItem pack_item = 2;
inline bool SRandomItem::has_pack_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SRandomItem::set_has_pack_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SRandomItem::clear_has_pack_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SRandomItem::clear_pack_item() {
  if (pack_item_ != NULL) pack_item_->::pwngs::protocol::worldsrv::SPackItem::Clear();
  clear_has_pack_item();
}
inline const ::pwngs::protocol::worldsrv::SPackItem& SRandomItem::pack_item() const {
  return pack_item_ != NULL ? *pack_item_ : *default_instance_->pack_item_;
}
inline ::pwngs::protocol::worldsrv::SPackItem* SRandomItem::mutable_pack_item() {
  set_has_pack_item();
  if (pack_item_ == NULL) pack_item_ = new ::pwngs::protocol::worldsrv::SPackItem;
  return pack_item_;
}
inline ::pwngs::protocol::worldsrv::SPackItem* SRandomItem::release_pack_item() {
  clear_has_pack_item();
  ::pwngs::protocol::worldsrv::SPackItem* temp = pack_item_;
  pack_item_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace worldsrv
}  // namespace protocol
}  // namespace pwngs

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pwngs_2fprotocol_2fworldsrv_2f00000_5f00000_5fdef_2eproto__INCLUDED
